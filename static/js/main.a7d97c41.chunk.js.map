{"version":3,"sources":["context/AppContext.js","api/meals.js","api/drinks.js","images/shareIcon.svg","images/whiteHeartIcon.svg","images/exploreIcon.svg","images/drinkIcon.svg","images/mealIcon.svg","images/profileIcon.svg","images/searchIcon.svg","components/SearchBar.jsx","images/blackHeartIcon.svg","images/recipeslogin.png","context/Provider.jsx","components/Card.jsx","components/Footer.jsx","api/categorieDrink.js","api/categorieFood.js","components/FilterCategorie.jsx","components/Header.jsx","pages/Bebidas.jsx","pages/Comidas.jsx","components/FavoriteButton.jsx","components/RecomendationCard.jsx","components/DetailsButton.jsx","pages/DetalhesBebidas.jsx","pages/DetalhesComidas.jsx","pages/Explorar.jsx","pages/ExplorarBebidas.jsx","pages/ExplorarComidas.jsx","pages/ExplorarIngredientesBebidas.jsx","pages/ExplorarIngredientesComidas.jsx","pages/ExplorarOrigem.jsx","pages/InProgress.jsx","pages/Login.jsx","pages/Perfil.jsx","pages/ReceitaFeitas.jsx","pages/ReceitasFavoritas.jsx","components/notFound.jsx","App.js","serviceWorker.js","index.js"],"names":["AppContext","createContext","fetchByIngredient","ingredient","a","fetch","response","json","meals","fetchByName","name","fetchByFirstLetter","firstLetter","fetchAllFoods","fetchRandomFood","fetchMealsById","id","fetchMealsIngredients","fetchMealsArea","fetchMealsByArea","area","getFoods","filterRadio","filterText","drinks","fetchAllDrinks","fetchRandomDrink","fetchDrinksById","fetchDrinksIngredients","getDrinks","module","exports","SearchBar","useContext","setFilterRadio","setFilterText","setFoods","setDrinks","setFetched","pathname","useLocation","history","useHistory","type","data-testid","placeholder","value","onChange","target","htmlFor","onClick","length","global","alert","includes","then","push","idMeal","idDrink","Provider","children","useState","loading","setLoading","email","setEmail","password","setPassword","foods","filterByArea","setFilterByArea","exploredFoods","setExploredFoods","exploredDrinks","setExploredDrinks","setArea","ingredients","setIngredients","categories","setCategories","Fetched","recipeDetail","setRecipeDetail","doneRecipes","setDoneRecipes","cocktails","contextValue","inProgressRecipes","setInProgressRecipes","Card","receita","receitas","index","dataTest","className","to","src","strMealThumb","alt","strMeal","strDrinkThumb","strDrink","useRenderCard","Footer","href","exploreIcon","drinkIcon","mealIcon","fetchCategorieDrinks","fetchFilterByCategorieDrink","categorie","fetchCategorieFood","fetchFilterByCategorieFood","FilterCategorie","selectedCategory","setSelectedCategory","useEffect","map","strCategory","key","Header","titlePage","show","visible","setVisible","profileIcon","searchIcon","defaultProps","renderCards","drink","Bebidas","mainDrinks","slice","mainExplored","food","Comidas","mainFoods","FavoriteButton","idProps","verify","setVerify","favoriteRecipes","setFavoriteRecipes","setTrueOrFalse","some","e","clickFavorite","findIndex","splice","category","alcoholicOrNot","strAlcoholic","image","strArea","local","JSON","parse","localStorage","getItem","console","log","setItem","stringify","setIcon","blackHeartIcon","whiteHeartIcon","RecomendationCard","obj","i","DetailsButton","useParams","Object","entries","filter","keys","startRecipe","DetalhesComidas","currentDrinks","filterIngredients","filterMeasure","reduce","acc","shareIcon","strInstructions","renderDetails","currentMeal","title","width","height","strYoutube","Explorar","useExplorarBebidas","res","useExplorarComidas","useExplorarIngredientesBebidas","useRenderCards","strIngredient1","handleChange","useExplorarIngredientesComidas","strIngredient","idIngredient","useExplorarOrigem","currentArea","InProgress","currentRecipe","filteredIngredients","Login","recipesIcon","disabled","checkPass","test","validateButton","user","Perfil","clear","receitasFeitas","card","recipe","ReceitasFavoritas","localFavorites","notFound","App","basename","exact","path","component","inProgress","DetalhesBebidas","explorarOrigem","explorarIngredientesComidas","ExplorarIngredientesBebidas","explorarComidas","explorarBebidas","ReceitasFeitas","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4HAAA,WAEMA,EAAaC,0BAEJD,O,qOCJTE,EAAiB,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACDC,MAAM,wDAAD,OAAyDF,IAD7D,cAClBG,EADkB,gBAELA,EAASC,OAFJ,cAElBA,EAFkB,yBAGjBA,EAAKC,OAHY,2CAAH,sDAMjBC,EAAW,uCAAG,WAAOC,GAAP,iBAAAN,EAAA,sEACKC,MAAM,wDAAD,OAAyDK,IADnE,cACZJ,EADY,gBAECA,EAASC,OAFV,cAEZA,EAFY,yBAGXA,EAAKC,OAHM,2CAAH,sDAMXG,EAAkB,uCAAG,WAAOC,GAAP,iBAAAR,EAAA,sEACFC,MAAM,wDAAD,OAAyDO,IAD5D,cACnBN,EADmB,gBAENA,EAASC,OAFH,cAEnBA,EAFmB,yBAGlBA,EAAKC,OAHa,2CAAH,sDAMXK,EAAa,uCAAG,8BAAAT,EAAA,sEACJC,MAAM,yDADF,cACrBC,EADqB,gBAERA,EAASC,OAFD,cAErBA,EAFqB,yBAGpBA,EAAKC,OAHe,2CAAH,qDAMbM,EAAe,uCAAG,8BAAAV,EAAA,sEACNC,MAAM,sDADA,cACvBC,EADuB,gBAEVA,EAASC,OAFC,cAEvBA,EAFuB,yBAGtBA,EAAKC,OAHiB,2CAAH,qDAMfO,EAAc,uCAAG,WAAOC,GAAP,iBAAAZ,EAAA,sEACLC,MAAM,wDAAD,OAAyDW,IADzD,cACtBV,EADsB,gBAETA,EAASC,OAFA,cAEtBA,EAFsB,yBAGrBA,EAAKC,OAHgB,2CAAH,sDAMdS,EAAqB,uCAAG,8BAAAb,EAAA,sEACZC,MAAM,2DADM,cAC7BC,EAD6B,gBAEhBA,EAASC,OAFO,cAE7BA,EAF6B,yBAG5BA,EAAKC,OAHuB,2CAAH,qDAMrBU,EAAc,uCAAG,8BAAAd,EAAA,sEACLC,MAAM,2DADD,cACtBC,EADsB,gBAETA,EAASC,OAFA,cAEtBA,EAFsB,yBAGrBA,EAAKC,OAHgB,2CAAH,qDAMrBW,EAAgB,uCAAG,WAAOC,GAAP,iBAAAhB,EAAA,sEACAC,MAAM,wDAAD,OAAyDe,IAD9D,cACjBd,EADiB,gBAEJA,EAASC,OAFL,cAEjBA,EAFiB,yBAGhBA,EAAKC,OAHW,2CAAH,sDAqBPa,IAfE,SAACC,EAAaC,GAC7B,OAAQD,GACR,IAAK,aACH,OAAOpB,EAAkBqB,GAC3B,IAAK,OACH,OAAOd,EAAYc,GACrB,IAAK,eACH,OAAOZ,EAAmBY,GAC5B,IAAK,OACH,OAAOJ,EAAiBI,GAC1B,QACE,MAAO,M,gMCjELrB,EAAiB,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACDC,MAAM,4DAAD,OAA6DF,IADjE,cAClBG,EADkB,gBAELA,EAASC,OAFJ,cAElBA,EAFkB,yBAGjBA,EAAKiB,QAHY,2CAAH,sDAMjBf,EAAW,uCAAG,WAAOC,GAAP,iBAAAN,EAAA,sEACKC,MAAM,4DAAD,OAA6DK,IADvE,cACZJ,EADY,gBAECA,EAASC,OAFV,cAEZA,EAFY,yBAGXA,EAAKiB,QAHM,2CAAH,sDAMXb,EAAkB,uCAAG,WAAOC,GAAP,iBAAAR,EAAA,sEACFC,MAAM,4DAAD,OAA6DO,IADhE,cACnBN,EADmB,gBAENA,EAASC,OAFH,cAEnBA,EAFmB,yBAGlBA,EAAKiB,QAHa,2CAAH,sDAMXC,EAAc,uCAAG,8BAAArB,EAAA,sEACLC,MAAM,6DADD,cACtBC,EADsB,gBAETA,EAASC,OAFA,cAEtBA,EAFsB,yBAGrBA,EAAKiB,QAHgB,2CAAH,qDAMdE,EAAgB,uCAAG,8BAAAtB,EAAA,sEACPC,MAAM,0DADC,cACxBC,EADwB,gBAEXA,EAASC,OAFE,cAExBA,EAFwB,yBAGvBA,EAAKiB,QAHkB,2CAAH,qDAMhBG,EAAe,uCAAG,WAAOX,GAAP,iBAAAZ,EAAA,sEACNC,MAAM,4DAAD,OAA6DW,IAD5D,cACvBV,EADuB,gBAEVA,EAASC,OAFC,cAEvBA,EAFuB,yBAGtBA,EAAKiB,QAHiB,2CAAH,sDAMfI,EAAsB,uCAAG,8BAAAxB,EAAA,sEACbC,MAAM,+DADO,cAC9BC,EAD8B,gBAEjBA,EAASC,OAFQ,cAE9BA,EAF8B,yBAG7BA,EAAKiB,QAHwB,2CAAH,qDAmBpBK,IAbG,SAACP,EAAaC,GAC9B,OAAQD,GACR,IAAK,aACH,OAAOpB,EAAkBqB,GAC3B,IAAK,OACH,OAAOd,EAAYc,GACrB,IAAK,eACH,OAAOZ,EAAmBY,GAC5B,QACE,MAAO,M,iBCnDXO,EAAOC,QAAU,IAA0B,uC,8DCA3CD,EAAOC,QAAU,IAA0B,4C,kBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,uCCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,iHCyG5BC,IAnGG,WAAO,IAAD,EASlBC,qBAAWjC,KAPbsB,EAFoB,EAEpBA,YACAY,EAHoB,EAGpBA,eACAX,EAJoB,EAIpBA,WACAY,EALoB,EAKpBA,cACAC,EANoB,EAMpBA,SACAC,EAPoB,EAOpBA,UACAC,EARoB,EAQpBA,WAEMC,EAAaC,cAAbD,SACFE,EAAUC,cAqChB,OACE,8BACE,2BACEC,KAAK,OACLC,cAAY,eACZC,YAAY,kBACZC,MAAQvB,EACRwB,SAAW,gBAAGC,EAAH,EAAGA,OAAH,OAAgBb,EAAca,EAAOF,UAElD,2BAAOG,QAAQ,cAAf,eAEE,2BACEvC,KAAK,SACLiC,KAAK,QACL3B,GAAG,aACH4B,cAAY,0BACZM,QAAU,gBAAGF,EAAH,EAAGA,OAAH,OAAgBd,EAAec,EAAOhC,QAGpD,2BAAOiC,QAAQ,QAAf,QAEE,2BACEvC,KAAK,SACLiC,KAAK,QACL3B,GAAG,OACH4B,cAAY,oBACZM,QAAU,gBAAGF,EAAH,EAAGA,OAAH,OAAgBd,EAAec,EAAOhC,QAGpD,2BAAOiC,QAAQ,gBAAf,kBAEE,2BACEvC,KAAK,SACLiC,KAAK,QACL3B,GAAG,eACH4B,cAAY,4BACZM,QAAU,gBAAGF,EAAH,EAAGA,OAAH,OAAgBd,EAAec,EAAOhC,QAGpD,4BACE2B,KAAK,SACLC,cAAY,kBACZM,QAAO,sBAAG,sBAAA9C,EAAA,gFA5EdkC,GAAW,GACS,iBAAhBhB,GAAkCC,EAAW4B,OAAS,GACxDC,EAAOC,MAAM,sDAGXd,EAASe,SAAS,WACpBjC,YAASC,EAAaC,GACnBgC,MAAK,SAACjD,GACAA,EAG0B,IAApBA,EAAS6C,OAClBV,EAAQe,KAAR,mBAAyBlD,EAAS,GAAGmD,UAErCnB,GAAW,GACXF,EAAS9B,IANT8C,EACGC,MAAM,0EASfxB,YAAUP,EAAaC,GACpBgC,MAAK,SAACjD,GACAA,EAG0B,IAApBA,EAAS6C,OAClBV,EAAQe,KAAR,mBAAyBlD,EAAS,GAAGoD,WAErCpB,GAAW,GACXD,EAAU/B,IANV8C,EACGC,MAAM,6EAqDH,4CAHZ,c,kCC7FNvB,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,4PCwE5B4B,MApEf,YAAiC,IAAbC,EAAY,EAAZA,SAAY,EACAC,oBAAS,GADT,mBACvBC,EADuB,KACdC,EADc,OAEJF,mBAAS,IAFL,mBAEvBG,EAFuB,KAEhBC,EAFgB,OAGEJ,mBAAS,IAHX,mBAGvBK,EAHuB,KAGbC,EAHa,OAIQN,mBAAS,IAJjB,mBAIvBvC,EAJuB,KAIVY,EAJU,OAKM2B,mBAAS,IALf,mBAKvBtC,EALuB,KAKXY,EALW,OAMJ0B,mBAAS,IANL,mBAMvBO,EANuB,KAMhBhC,EANgB,OAOFyB,mBAAS,IAPP,mBAOvBrC,EAPuB,KAOfa,EAPe,OAQUwB,mBAAS,IARnB,mBAQvBQ,EARuB,KAQTC,EARS,OASYT,mBAAS,IATrB,mBASvBU,EATuB,KASRC,EATQ,OAUcX,mBAAS,IAVvB,mBAUvBY,EAVuB,KAUPC,EAVO,OAWNb,mBAAS,IAXH,mBAWvBzC,EAXuB,KAWjBuD,EAXiB,OAYQd,mBAAS,IAZjB,mBAYvBe,EAZuB,KAYVC,EAZU,QAaMhB,mBAAS,IAbf,qBAavBiB,GAbuB,MAaXC,GAbW,SAcAlB,oBAAS,GAdT,qBAcvBmB,GAduB,MAcd1C,GAdc,SAeUuB,mBAAS,IAfnB,qBAevBoB,GAfuB,MAeTC,GAfS,SAgBQrB,mBAAS,IAhBjB,qBAgBvBsB,GAhBuB,MAgBVC,GAhBU,SAkBJvB,mBAAS,CAAEwB,UAAW,GAAI7E,MAAO,KAlB7B,qBAoBxB8E,GAAe,CACnBxB,UACAC,aACAC,QACAC,WACAC,WACAC,cACA7C,cACAY,iBACAX,aACAY,gBACAiC,QACAhC,WACAZ,SACAa,YACAyC,cACAC,iBACAC,WACA1C,cACA2C,gBACAC,mBACAN,cACAC,iBACAN,gBACAC,mBACAC,iBACAC,oBACAtD,OACAuD,UACAN,eACAC,kBACAiB,kBAnD4B,MAoD5BC,qBApD4B,MAqD5BL,eACAC,mBAGF,OACE,kBAACpF,EAAA,EAAW2D,SAAZ,CAAqBb,MAAQwC,IAC1B1B,ICIQ6B,G,MAJF,SAACC,GAAD,OA3DS,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAChCtD,EAAaC,cAAbD,SACR,GAAIoD,EACF,MAAkB,aAAbpD,GAA0C,2BAAbA,EAE9B,kBAAC,IAAD,CACEuD,UAAU,YACVC,GAAE,mBAAeJ,EAASlC,SAE1B,6BACEqC,UAAU,OACVlD,cAAciD,GAEd,yBACEC,UAAU,aACVE,IAAML,EAASM,aACfC,IAAMP,EAASQ,QACfvD,cAAA,UAAiBgD,EAAjB,eAEF,wBACEhD,cAAA,UAAiBgD,EAAjB,cACAE,UAAU,cAERH,EAASQ,WAQnB,kBAAC,IAAD,CACEL,UAAU,YACVC,GAAE,mBAAeJ,EAASjC,UAE1B,yBACEd,cAAciD,EACdC,UAAU,QAEV,yBACEA,UAAU,aACVE,IAAML,EAASS,cACfF,IAAMP,EAASU,SACfzD,cAAA,UAAiBgD,EAAjB,eAEF,iCACE,wBACEE,UAAU,aACVlD,cAAA,UAAiBgD,EAAjB,eAEED,EAASU,aAUvBC,CAAcZ,K,2DCzCDa,EAdA,kBACb,4BAAQ3D,cAAY,UAClB,uBAAG4D,KAAK,YAAY5D,cAAY,qBAAqBoD,IAAMS,KACzD,yBAAKT,IAAMS,IAAcP,IAAI,kBAE/B,uBAAGM,KAAK,WAAW5D,cAAY,oBAAoBoD,IAAMU,KACvD,yBAAKV,IAAMU,IAAYR,IAAI,iBAE7B,uBAAGM,KAAK,WAAW5D,cAAY,kBAAkBoD,IAAMW,KACrD,yBAAKX,IAAMW,IAAWT,IAAI,iB,yDClBnBU,EAAoB,uCAAG,8BAAAxG,EAAA,sEACXC,MAAM,+DADK,cAC5BC,EAD4B,gBAEfA,EAASC,OAFM,cAE5BA,EAF4B,yBAG3BA,EAAKiB,QAHsB,2CAAH,qDAMpBqF,EAA2B,uCAAG,WAAOC,GAAP,iBAAA1G,EAAA,sEAEzCC,MAAM,4DAAD,OAA6DyG,IAFzB,cACnCxG,EADmC,gBAGtBA,EAASC,OAHa,cAGnCA,EAHmC,yBAIlCA,EAAKiB,QAJ6B,2CAAH,sDAO3BC,EAAc,uCAAG,8BAAArB,EAAA,sEACLC,MAAM,6DADD,cACtBC,EADsB,gBAETA,EAASC,OAFA,cAEtBA,EAFsB,yBAGrBA,EAAKiB,QAHgB,2CAAH,qDCbduF,EAAkB,uCAAG,8BAAA3G,EAAA,sEACTC,MAAM,2DADG,cAC1BC,EAD0B,gBAEbA,EAASC,OAFI,cAE1BA,EAF0B,yBAGzBA,EAAKC,OAHoB,2CAAH,qDAMlBwG,EAA0B,uCAAG,WAAOF,GAAP,iBAAA1G,EAAA,sEAExCC,MAAM,wDAAD,OAAyDyG,IAFtB,cAClCxG,EADkC,gBAGrBA,EAASC,OAHY,cAGlCA,EAHkC,yBAIjCA,EAAKC,OAJ4B,2CAAH,sDAO1BK,EAAa,uCAAG,8BAAAT,EAAA,sEACJC,MAAM,yDADF,cACrBC,EADqB,gBAERA,EAASC,OAFD,cAErBA,EAFqB,yBAGpBA,EAAKC,OAHe,2CAAH,qDC0FXyG,G,MA3FS,WAAO,IACrB1E,EAAaC,cAAbD,SADoB,EAObN,qBAAWjC,KAJxB8E,EAH0B,EAG1BA,WACAC,EAJ0B,EAI1BA,cACA1C,EAL0B,EAK1BA,UACAC,EAN0B,EAM1BA,WACAF,EAP0B,EAO1BA,SAP0B,EAQoByB,mBAAS,OAR7B,mBAQrBqD,EARqB,KAQHC,EARG,KAU5BC,qBAAU,WACS,aAAb7E,GACFwE,IAAqBxD,KAAKwB,GAEX,aAAbxC,GACFqE,IAAuBrD,KAAKwB,KAE7B,CAACxC,EAAUwC,IA2Cd,OACgB,aAAbxC,GAAwC,aAAbA,IAExB,6BAASuD,UAAU,0BACjB,4BACEnD,KAAK,SACLC,cAAY,sBACZkD,UAAU,eACV5C,QApBO,WACE,aAAbX,GACF1B,IAAgB0C,KAAKnB,GACrBE,GAAW,GACX6E,EAAoB,SAEpB1F,IAAiB8B,KAAKlB,GACtBC,GAAW,GACX6E,EAAoB,UAQhB,OAQCrC,EAAWuC,KAAI,WAAkBzB,GAAW,IAA1B0B,EAAyB,EAAzBA,YACjB,OAAI1B,EAtDK,EAwDL,4BACEjD,KAAK,SACL4E,IAAM3B,EACNE,UAAU,eACVlD,cAAA,UAAiB0E,EAAjB,oBACApE,QAAU,kBA3DL4D,EA2DuBQ,EA1D1ChF,GAAW,GAEM,aAAbC,IACEuE,IAAcI,GAChBrG,IAAgB0C,KAAKnB,GACrBE,GAAW,GACX6E,EAAoB,SAEpBH,EAA2BF,GAAWvD,KAAKnB,GAC3CE,GAAW,GACX6E,EAAoBL,UAGP,aAAbvE,IACEuE,IAAcI,GAChBzF,IAAiB8B,KAAKlB,GACtBC,GAAW,GACX6E,EAAoB,SAEpBN,EAA4BC,GAAWvD,KAAKlB,GAC5CC,GAAW,GACX6E,EAAoBL,MAtBN,IAACA,IA6DJQ,GAGE,W,QCxFfE,EAAS,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,UAAWC,EAAW,EAAXA,KAAW,EACR7D,oBAAS,GADD,mBAC/B8D,EAD+B,KACtBC,EADsB,KAEtC,OACE,gCACE,6BAAS9B,UAAU,gBACjB,kBAAC,IAAD,CAAMC,GAAG,UAAUD,UAAU,aAC3B,yBAAKE,IAAM6B,IAAcjF,cAAY,kBAAkBsD,IAAI,kBAE7D,wBACElF,GAAG,aACH8E,UAAU,aACVlD,cAAY,cAEX6E,GAGFC,GAEC,4BACE5B,UAAU,aACVnD,KAAK,SACLO,QAAU,kBAAM0E,GAAYD,KAE5B,yBACE3B,IAAM8B,IACN5B,IAAI,cACJtD,cAAY,qBAInB+E,GAAW,kBAAC3F,EAAA,EAAD,MACZ,kBAAC,EAAD,QAUNwF,EAAOO,aAAe,CACpBL,MAAM,GAGOF,Q,OC5CTQ,EAAc,SAACC,EAAOrC,GAAR,OAClB,kBAAC,EAAD,CACE2B,IAAMU,EAAMvE,QACZiC,SAAWsC,EACXrC,MAAQA,EACRC,SAAQ,UAAMD,EAAN,mBA8BGsC,EA3BC,WAAO,IAAD,EAEajG,qBAAWjC,KADpCwB,EADY,EACZA,OAAQwD,EADI,EACJA,QAAS3C,EADL,EACKA,UACvBC,EAFkB,EAElBA,WAAYmC,EAFM,EAENA,eAEd2C,qBAAU,WACR3F,cAAiB8B,MAAK,SAACjD,GAAD,OAAc+B,EAAU/B,MAC9CgC,GAAW,KACV,CAACA,EAAYD,IAEhB,IAAM8F,EAAcnD,GAAWxD,EAAO2B,OAnBrB,GAmB2C3B,EAAO4G,MAAM,EAnBxD,IAoBdf,IAAIW,GAAexG,EAAO6F,IAAIW,GAE3BK,EAAgBrD,GAAWP,EAAetB,OAtB/B,GAuBbsB,EAAe2D,MAAM,EAvBR,IAwBZf,IAAIW,GAAevD,EAAe4C,IAAIW,GAE3C,OACE,8BACE,kBAAC,EAAD,CAAQP,UAAU,YAClB,6BAAS3B,UAAU,wBAChBrB,EAAetB,OAAS,EAAIkF,EAAeF,GAE9C,kBAAC,EAAD,Q,OC9BOH,EAAc,SAACM,EAAM1C,GAAP,OACzB,kBAAC,EAAD,CACE2B,IAAMe,EAAK7E,OACXkC,SAAW2C,EACX1C,MAAQA,EACRC,SAAQ,UAAMD,EAAN,mBA6BG2C,EA1BC,WAAO,IAAD,EAC4CtG,qBAAWjC,KAAnEoE,EADY,EACZA,MAAOY,EADK,EACLA,QAAS5C,EADJ,EACIA,SAAUE,EADd,EACcA,WAAYiC,EAD1B,EAC0BA,cAE9C6C,qBAAU,WACRvG,cAAgB0C,MAAK,SAACjD,GAAD,OAAc8B,EAAS9B,MAC5CgC,GAAW,KACV,CAACA,EAAYF,IAEhB,IAAMoG,EAAaxD,GAAWZ,EAAMjB,OAlBnB,GAkByCiB,EAAMgE,MAAM,EAlBrD,IAmBdf,IAAIW,GAAe5D,EAAMiD,IAAIW,GAE1BK,EAAgBrD,GAAWZ,EAAMjB,OArBtB,GAsBboB,EAAc6D,MAAM,EAtBP,IAuBZf,IAAIW,GAAezD,EAAc8C,IAAIW,GAE1C,OACE,8BACE,kBAAC,EAAD,CAAQP,UAAU,YAClB,6BAAS3B,UAAU,wBAChBvB,EAAcpB,OAAS,EAAIkF,EAAeG,GAE7C,kBAAC,EAAD,Q,mECmDSC,EAnFQ,SAAC,GAA2B,IAAzB5C,EAAwB,EAAxBA,SAAU6C,EAAc,EAAdA,QAC1BzD,EAAiBhD,qBAAWjC,KAA5BiF,aACA1C,EAAaC,cAAbD,SAFwC,EAGpBsB,qBAHoB,mBAGzC8E,EAHyC,KAGjCC,EAHiC,OAIF/E,mBAAS,IAJP,mBAIzCgF,EAJyC,KAIxBC,EAJwB,KAM1CC,EAAiB,WACrBH,EAAUC,EAAgBG,MAAK,SAACC,GAAD,OAAOA,EAAEjI,KAAO0H,OA0B3CQ,EAAgB,WAEpB,GAAKP,EAEE,CACL,IAAM/C,EAAQiD,EAAgBM,WAAU,SAACF,GAAD,OAAOA,EAAEjI,KAAO0H,KACxDG,EAAgBO,OAAOxD,EAAO,GAC9BkD,EAAmBD,GACnBE,SALAD,EAzBEvG,EAASe,SAAS,WACd,GAAN,mBAAWuF,GAAX,CAA4B,CAC1B7H,GAAIiE,EAAa,GAAGvB,QACpBf,KAAM,SACNvB,KAAM,GACNiI,SAAUpE,EAAa,GAAGqC,YAC1BgC,eAAgBrE,EAAa,GAAGsE,aAChC7I,KAAMuE,EAAa,GAAGoB,SACtBmD,MAAOvE,EAAa,GAAGmB,iBAGrB,GAAN,mBAAWyC,GAAX,CAA4B,CAC1B7H,GAAIiE,EAAa,GAAGxB,OACpBd,KAAM,SACNvB,KAAM6D,EAAa,GAAGwE,QACtBJ,SAAUpE,EAAa,GAAGqC,YAC1BgC,eAAgB,GAChB5I,KAAMuE,EAAa,GAAGkB,QACtBqD,MAAOvE,EAAa,GAAGgB,kBAgB3BmB,qBAAU,WACR,IAAMsC,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,qBAAuB,GACjEJ,GACFZ,EAAmBY,GAErBX,IACAgB,QAAQC,IAAIrB,KACX,IAEHvB,qBAAU,WACR2B,IACAc,aAAaI,QAAQ,kBAAmBN,KAAKO,UAAUrB,MACtD,CAACA,EAAiBE,IAErB,IAAMoB,EAAU,WACd,OAAIxB,EACKyB,IAEFC,KAGT,OACE,4BACE1H,KAAK,SACLC,cAAciD,EACd3C,QAAU,kBAAMgG,KAChBlD,IAAMmE,KAEN,yBAAKnE,IAAMmE,IAAYjE,IAAI,gBCGlBoE,EA7EW,SAAC,GAAgB,IAAdC,EAAa,EAAbA,IAAKC,EAAQ,EAARA,EACxBjI,EAAaC,cAAbD,SADgC,EAEdN,qBAAWjC,KAA7BwB,EAFgC,EAEhCA,OAAQ4C,EAFwB,EAExBA,MAGhB,OAAI7B,EAASe,SAAS,WACL,OAAX9B,GAAmBgJ,EAHA,EAKnB,kBAAC,IAAD,CACE1E,UAAU,0BACVC,GAAE,mBAAewE,EAAI7G,SACrB6D,IAAMgD,EAAI7G,SAEV,yBACEoC,UAAU,OACVlD,cAAA,UAAiB4H,EAAjB,wBAEA,yBACExE,IAAMuE,EAAInE,cACVF,IAAMqE,EAAIlE,SACVzD,cAAA,UAAiB4H,EAAjB,aACA1E,UAAU,gBAEZ,wBACEA,UAAU,cACVlD,cAAA,UAAiB4H,EAAjB,yBAEED,EAAIlE,YAMT,KACO,OAAVjC,GAAkBoG,EA/BC,EAiCrB,kBAAC,IAAD,CACE1E,UAAU,0BACVC,GAAE,mBAAewE,EAAI9G,QACrB8D,IAAMgD,EAAI9G,QAEV,yBACEqC,UAAU,OACVlD,cAAA,UAAiB4H,EAAjB,wBAEA,yBACExE,IAAMuE,EAAItE,aACVC,IAAMqE,EAAIpE,QACVvD,cAAA,UAAiB4H,EAAjB,aACA1E,UAAU,gBAEZ,wBACEA,UAAU,cACVlD,cAAA,UAAiB4H,EAAjB,yBAEED,EAAIpE,WAOT,M,gBC+BMsE,GA9FO,WAAO,IACnBlI,EAAaC,cAAbD,SACAvB,EAAO0J,cAAP1J,GAFkB,EAKCiB,qBAAWjC,KAF9BiF,EAHkB,EAGlBA,aACNM,EAJwB,EAIxBA,kBACAC,EALwB,EAKxBA,qBACMH,EAAqBE,EAArBF,UAAW7E,EAAU+E,EAAV/E,MACbiC,EAAUC,cAPU,EAQEmB,qBARF,mBAQnB8E,EARmB,KAQXC,EARW,KAapBhE,EAHoB+F,OAAOC,QAAQ3F,EAAa,IACnD4F,QAAO,mCAAEtD,EAAF,KAAOzE,EAAP,YAAkByE,EAAIjE,SAAS,kBACrB,KAAVR,GAA4B,OAAVA,KACUuE,KAAI,SAAC4B,GAAD,OAAOA,EAAE,MAwB7CF,EAAiB,WACrB,GAAIxG,EAASe,SAAS,WACpB,OAAOsF,EAAU+B,OAAOG,KAAKtK,GAAOwI,MAAK,SAACC,GAAD,OAAOA,IAAMjI,MAGxD4H,EAAU+B,OAAOG,KAAKzF,GAAW2D,MAAK,SAACC,GAAD,OAAOA,IAAMjI,OAGrDoG,qBAAU,WACR2B,IACA,IAAMW,EAAQG,aAAaC,QAAQ,qBAC/BJ,GACFlE,EAAqBmE,KAAKC,MAAMF,MAEjC,IAEHtC,qBAAU,WACR2B,IACAc,aAAaI,QAAQ,oBAAqBN,KAAKO,UAAU3E,MACxD,CAACA,IAEJ,IAAMwF,EAAW,uCAAG,sBAAA3K,EAAA,sEACZoF,EA3CFjD,EAASe,SAAS,UACb,CACL+B,UAAU,eACLA,GAEL7E,MAAM,2BACDA,GADA,kBAEFQ,EAAK4D,KAGH,CACPpE,MAAM,eACDA,GAEL6E,UAAU,2BACLA,GADI,kBAENrE,EAAK4D,MA0BQ,OAElBnC,EAAQe,KAAR,UAAgBjB,EAAhB,iBAFkB,2CAAH,qDA+BjB,OAAIoG,EAVF,4BACEhG,KAAK,SACLC,cAAY,mBACZkD,UAAU,mBACV5C,QAAU,WAnBZT,EAAQe,KAAR,UAAgBjB,EAAhB,mBAeA,qBAXA,4BACEI,KAAK,SACLC,cAAY,mBACZkD,UAAU,mBACV5C,QAAU,kBAAM6H,MAJlB,oBCoCWC,GAjGS,WAAO,IAAD,EAC+B/I,qBAAWjC,KAA9DiF,EADoB,EACpBA,aAAcC,EADM,EACNA,gBAAiBd,EADX,EACWA,MAAOhC,EADlB,EACkBA,SACtCpB,EAAO0J,cAAP1J,GAERoG,qBAAU,WACRzF,YAAgBX,GAAIuC,KAAK2B,GACzBrE,cAAgB0C,KAAKnB,KACpB,CAACA,EAAU8C,EAAiBlE,IAE/B,IAAMiK,EAAgBhG,EAAa,GAqFnC,OAnFsB,WACpB,GAAIgG,EAAe,CACjB,IAAMC,EAAoBP,OAAOC,QAAQK,GACtCJ,QAAO,mCAAEtD,EAAF,KAAOzE,EAAP,YAAkByE,EAAIjE,SAAS,kBACvB,KAAVR,GAA4B,OAAVA,KACpBqI,EAAgBR,OAAOC,QAAQK,GAClCG,QAAO,SAACC,EAAD,GAAwB,IAAD,mBAAhB9D,EAAgB,KAAXzE,EAAW,KAQ7B,OAPIyE,EAAIjE,SAAS,gBACD,OAAVR,EACFuI,EAAI7H,KAAK,IAET6H,EAAI7H,KAAKV,IAGNuI,IACN,IACL,OACE,6BAASvF,UAAU,qBACjB,yBACEE,IAAMiF,EAAc7E,cACpBF,IAAM+E,EAAc5E,SACpBzD,cAAY,eACZkD,UAAU,kBAEZ,wBACEA,UAAU,gBACVlD,cAAY,gBAEXqI,EAAc5E,UAEjB,wBACEzD,cAAY,kBACZkD,UAAU,oBAETmF,EAAc1B,cAEjB,wBACE3G,cAAY,kBACZkD,UAAU,oBAETmF,EAAc3D,aAEjB,iCACE,4BAAQ3E,KAAK,SAASC,cAAY,aAChC,yBAAKoD,IAAMsF,IAAYpF,IAAI,kBAE7B,kBAAC,EAAD,CAAgBL,SAAS,eAAe6C,QAAU1H,KAEpD,4BACGkK,EAAkB7D,KAAI,WAAemD,GAAf,uBAAEjD,EAAF,KAAOzE,EAAP,YACrB,wBACEF,cAAA,UAAiB4H,EAAjB,gCACAjD,IAAMA,GAFR,UAIM4D,EAAcX,GAJpB,YAI0B1H,QAG9B,6BACEgD,UAAU,eACVlD,cAAY,gBAEZ,4DACA,uBAAGA,cAAY,gBAAgBqI,EAAcM,kBAE/C,6BAASzF,UAAU,2BAEf1B,EAAMiD,KAAI,SAACiB,EAAMkC,GAAP,OACR,kBAAC,EAAD,CACED,IAAMjC,EACNkC,EAAIA,EACJjD,IAAMiD,QAKd,kBAAC,GAAD,OAKN,OAAO,KAGFgB,ICQMR,GApGS,WAAO,IAAD,EACiC/I,qBAAWjC,KAAhEiF,EADoB,EACpBA,aAAcC,EADM,EACNA,gBAAiB1D,EADX,EACWA,OAAQa,EADnB,EACmBA,UACvCrB,EAAO0J,cAAP1J,GAERoG,qBAAU,WACRrG,YAAeC,GAAIuC,KAAK2B,GACxBzD,cAAiB8B,KAAKlB,KACrB,CAAC6C,EAAiB7C,EAAWrB,IAEhC,IAAMyK,EAAcxG,EAAa,GAwFjC,OAtFsB,WAGpB,GAAIwG,EAAa,CACf,IAAMP,EAAoBP,OAAOC,QAAQa,GACtCZ,QAAO,mCAAEtD,EAAF,KAAOzE,EAAP,YAAkByE,EAAIjE,SAAS,kBACzB,KAAVR,GAA4B,OAAVA,KAClBqI,EAAgBR,OAAOC,QAAQa,GAClCL,QAAO,SAACC,EAAD,GAAwB,IAAD,mBAAhB9D,EAAgB,KAAXzE,EAAW,KAQ7B,OAPIyE,EAAIjE,SAAS,gBACD,OAAVR,EACFuI,EAAI7H,KAAK,IAET6H,EAAI7H,KAAKV,IAGNuI,IACN,IAEL,OACE,6BAASvF,UAAU,qBACjB,yBACEE,IAAMyF,EAAYxF,aAClBC,IAAMuF,EAAYtF,QAClBvD,cAAY,eACZkD,UAAU,kBAEZ,wBACEA,UAAU,gBACVlD,cAAY,gBAEV6I,EAAYtF,SAEhB,wBACEvD,cAAY,kBACZkD,UAAU,oBAER2F,EAAYnE,aAEhB,iCACE,4BAAQ3E,KAAK,SAASC,cAAY,aAChC,yBAAKoD,IAAMsF,IAAYpF,IAAI,kBAE7B,kBAAC,EAAD,CAAgBL,SAAS,eAAe6C,QAAU1H,KAEpD,4BACGkK,EAAkB7D,KAAI,WAAemD,GAAf,uBAAEjD,EAAF,KAAOzE,EAAP,YACrB,wBACEF,cAAA,UAAiB4H,EAAjB,gCACAjD,IAAMA,GAFR,UAIM4D,EAAcX,GAJpB,YAI0B1H,QAG9B,yBAAKF,cAAY,gBACf,4DACA,uBAAGA,cAAY,gBAAiB6I,EAAYF,kBAE9C,6BAAShE,IAAMkE,EAAYhI,QACzB,4BACEiI,MAAM,QACNC,MAAM,MACNC,OAAO,MACPhJ,cAAY,QACZoD,IAAMyF,EAAYI,WAAZ,wCAA0DJ,EAAYI,WAAWzD,MA/D7E,KA+DoG,MAGlH,6BAAStC,UAAU,2BAEftE,EAAO6F,KAAI,SAACY,EAAOuC,GAAR,OACT,kBAAC,EAAD,CACED,IAAMtC,EACNuC,EAAIA,EACJjD,IAAMiD,QAKd,kBAAC,GAAD,OAKN,OAAO,KAGFgB,IC7FMM,GAbE,kBACf,8BACE,kBAAC,EAAD,CAAQrE,UAAU,WAAWC,MAAO,IACpC,kBAAC,IAAD,CAAM3B,GAAG,qBACP,4BAAQpD,KAAK,SAASC,cAAY,gBAAlC,qBAEF,kBAAC,IAAD,CAAMmD,GAAG,qBACP,4BAAQpD,KAAK,SAASC,cAAY,kBAAlC,qBAEF,kBAAC,EAAD,QCuBWmJ,GA9BY,WAAO,IAAD,EACW9J,qBAAWjC,KAA7CiF,EADuB,EACvBA,aAAcC,EADS,EACTA,gBAQtB,OANAkC,qBAAU,WACR1F,cAAmB6B,MAAK,SAACyI,GAAD,OAASrK,YAAgBqK,EAAI,GAAGtI,YACrDH,KAAK2B,KACP,CAACA,IAEiBD,EAAa,GAG9B,8BACE,kBAAC,EAAD,CAAQwC,UAAU,mBAAmBC,MAAO,IAC5C,kBAAC,IAAD,CAAM3B,GAAG,kCACP,4BACEpD,KAAK,SACLC,cAAY,yBAFd,qBAOF,kBAAC,IAAD,CAAMmD,GAAE,mBAAed,EAAa,GAAGvB,UACrC,4BAAQf,KAAK,SAASC,cAAY,oBAAlC,mBAEF,kBAAC,EAAD,OAGG,MCMIqJ,GAjCY,WAAO,IAAD,EACWhK,qBAAWjC,KAA7CiF,EADuB,EACvBA,aAAcC,EADS,EACTA,gBAQtB,OANAkC,qBAAU,WACRtG,cAAkByC,MAAK,SAACyI,GAAD,OAASjL,YAAeiL,EAAI,GAAGvI,WACnDF,KAAK2B,KACP,CAACA,IAEgBD,EAAa,GAG7B,8BACE,kBAAC,EAAD,CAAQwC,UAAU,mBAAmBC,MAAO,IAC5C,kBAAC,IAAD,CAAM3B,GAAG,kCACP,4BACEpD,KAAK,SACLC,cAAY,yBAFd,qBAOF,kBAAC,IAAD,CAAMmD,GAAG,0BACP,4BAAQpD,KAAK,SAASC,cAAY,mBAAlC,wBAEF,kBAAC,IAAD,CAAMmD,GAAE,mBAAed,EAAa,GAAGxB,SACrC,4BAAQd,KAAK,SAASC,cAAY,oBAAlC,mBAEF,kBAAC,EAAD,OAGG,MCYIsJ,GA1CwB,WAAO,IAAD,EACgBjK,qBAAWjC,KAA9D4E,EADmC,EACnCA,YAAaC,EADsB,EACtBA,eAAgBH,EADM,EACNA,kBAC/BjC,EAAUC,cAEhB0E,qBAAU,WACRxF,cAAyB2B,KAAKsB,KAC7B,CAACA,IAEJ,IAOMsH,EAAiB,SAAChM,EAAYyF,GAAb,OACrB,4BACE1C,QAAU,kBAPO,SAAC/C,GACpB0B,YAAU,aAAc1B,EAAWiM,gBAAgB7I,KAAKmB,GACxDjC,EAAQe,KAAK,YAKK6I,CAAalM,IAC7BwC,KAAK,SACLC,cAAA,UAAiBgD,EAAjB,oBACA2B,IAAMpH,EAAWiM,gBAEjB,yBACEpG,IAAG,2DAAuD7F,EAAWiM,eAAlE,cACHlG,IAAM/F,EAAWiM,eACjBxJ,cAAA,UAAiBgD,EAAjB,eAEF,wBAAIhD,cAAA,UAAiBgD,EAAjB,eAAuCzF,EAAWiM,kBAG1D,OAEE,8BACE,kBAAC,EAAD,CAAQ3E,UAAU,wBAAwBC,MAAO,IAChD9C,EAAYzB,OA1BG,GA2BZyB,EAAYwD,MAAM,EA3BN,IA2BsBf,IAAI8E,GACtCvH,EAAYyC,IAAI8E,GACpB,kBAAC,EAAD,QCKSG,GA1CwB,WAAO,IAAD,EACerK,qBAAWjC,KAA7D4E,EADmC,EACnCA,YAAaC,EADsB,EACtBA,eAAgBL,EADM,EACNA,iBAC/B/B,EAAUC,cAEhB0E,qBAAU,WACRnG,cAAwBsC,KAAKsB,KAC5B,CAACA,IAEJ,IAOMsH,EAAiB,SAAChM,EAAYyF,GAAb,OACrB,4BACE1C,QAAU,kBAPO,SAAC/C,GACpBkB,YAAS,aAAclB,EAAWoM,eAAehJ,KAAKiB,GACtD/B,EAAQe,KAAK,YAKK6I,CAAalM,IAC7BwC,KAAK,SACLC,cAAA,UAAiBgD,EAAjB,oBACA2B,IAAMpH,EAAWqM,cAEjB,yBACExG,IAAG,uDAAmD7F,EAAWoM,cAA9D,cACHrG,IAAM/F,EAAWoM,cACjB3J,cAAA,UAAiBgD,EAAjB,eAEF,wBAAIhD,cAAA,UAAiBgD,EAAjB,eAAuCzF,EAAWoM,iBAG1D,OAEE,8BACE,kBAAC,EAAD,CAAQ9E,UAAU,wBAAwBC,MAAO,IAChD9C,EAAYzB,OA1BG,GA2BZyB,EAAYwD,MAAM,EA3BN,IA2BsBf,IAAI8E,GACtCvH,EAAYyC,IAAI8E,GACpB,kBAAC,EAAD,QCYSM,GAjDW,WAAO,IAAD,EACaxK,qBAAWjC,KAA9CoE,EADsB,EACtBA,MAAOhD,EADe,EACfA,KAAMuD,EADS,EACTA,QAASvC,EADA,EACAA,SAE9BgF,qBAAU,WACRlG,cAAiBqC,KAAKoB,GACtB9D,cAAgB0C,KAAKnB,KACpB,CAACuC,EAASvC,IAEb,IAoBMoG,EAAapE,EAAMjB,OApBb,GAoB4BiB,EAAMgE,MAAM,EApBxC,IAqBTf,IAAIW,GAAe5D,EAAMiD,IAAIW,GAEhC,OACE,8BACE,kBAAC,EAAD,CAAQP,UAAU,oBAClB,4BAAQ7E,cAAY,2BAA2BG,SAxB9B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACD,QAAjBA,EAAOF,MACTzB,YAAS,OAAQ2B,EAAOF,OAAOS,KAAKnB,GAEpCvB,cAAgB0C,KAAKnB,KAqBnB,4BACEQ,cAAY,aACZE,MAAM,OAFR,OAMC1B,EAAKiG,KAvBI,SAACqF,GAAD,OACd,4BACEnF,IAAMmF,EAAYjD,QAClB7G,cAAA,UAAiB8J,EAAYjD,QAA7B,WACA3G,MAAQ4J,EAAYjD,SAElBiD,EAAYjD,aAmBbjB,EACD,kBAAC,EAAD,QC+HSmE,GAtKI,WAAO,IAAD,EACmB1K,qBAAWjC,KAA7CiF,EADe,EACfA,aAAcC,EADC,EACDA,gBACd3C,EAAaC,cAAbD,SACAvB,EAAO0J,cAAP1J,GACF4L,EAAgB3H,EAAa,GAEnCmC,qBAAU,WACJ7E,EAASe,SAAS,YACpBvC,YAAeC,GAAIuC,KAAK2B,GAExBvD,YAAgBX,GAAIuC,KAAK2B,KAE1B,CAACA,EAAiBlE,EAAIuB,IAEzB,IAAMsK,EAAsB,WAC1B,IAAM3B,EAAoBP,OAAOC,QAAQgC,GACtC/B,QAAO,mCAAEtD,EAAF,KAAOzE,EAAP,YAAkByE,EAAIjE,SAAS,kBACzB,KAAVR,GAA4B,OAAVA,KAElBqI,EAAgBR,OAAOC,QAAQgC,GAClCxB,QAAO,SAACC,EAAD,GAAwB,IAAD,mBAAhB9D,EAAgB,KAAXzE,EAAW,KAS7B,OARIyE,EAAIjE,SAAS,gBACD,OAAVR,EACFuI,EAAI7H,KAAK,IAET6H,EAAI7H,KAAKV,IAINuI,IACN,IAEL,OAAOH,EAAkB7D,KAAI,WAAemD,GAAf,uBAAEjD,EAAF,KAAOzE,EAAP,YAC3B,2BACEG,QAAUuH,EACVjD,IAAMiD,EACN5H,cAAA,UAAiB4H,EAAjB,qBAHF,UAKMW,EAAcX,GALpB,YAK0B1H,GACxB,2BACE9B,GAAKwJ,EACL9J,KAAI,UAAMyK,EAAcX,GAApB,YAA0B1H,GAC9BH,KAAK,WACL4E,IAAMA,SAwHd,OAjHMqF,GAAiBA,EAAcvG,SAE/B,6BAASP,UAAU,qBACjB,yBACEE,IAAM4G,EAAcxG,cACpBF,IAAM0G,EAAcvG,SACpBzD,cAAY,eACZkD,UAAU,kBAEZ,wBACEA,UAAU,gBACVlD,cAAY,gBAEVgK,EAAcvG,UAElB,wBACEzD,cAAY,kBACZkD,UAAU,oBAET8G,EAAcrD,cAEjB,wBACE3G,cAAY,kBACZkD,UAAU,oBAER8G,EAActF,aAElB,iCACE,4BAAQ3E,KAAK,SAASC,cAAY,aAChC,yBAAKoD,IAAMsF,IAAYpF,IAAI,kBAE7B,kBAAC,EAAD,CAAgBL,SAAS,kBAE3B,6BAEIgH,KAGJ,6BACE/G,UAAU,eACVlD,cAAY,gBAEZ,4DACA,uBAAGA,cAAY,gBAAiBgK,EAAcrB,kBAEhD,kBAAC,IAAD,CAAMxF,GAAG,oBACP,4BACEpD,KAAK,SACLC,cAAY,qBAFd,uBAWJgK,GAAiBA,EAAczG,QAE/B,6BAASL,UAAU,qBACjB,yBACEE,IAAM4G,EAAc3G,aACpBC,IAAM0G,EAAczG,QACpBvD,cAAY,eACZkD,UAAU,kBAEZ,wBACEA,UAAU,gBACVlD,cAAY,gBAEVgK,EAAczG,SAElB,wBACEvD,cAAY,kBACZkD,UAAU,oBAER8G,EAActF,aAElB,iCACE,4BAAQ3E,KAAK,SAASC,cAAY,aAChC,yBAAKoD,IAAMsF,IAAYpF,IAAI,kBAE7B,4BAAQvD,KAAK,SAASC,cAAY,gBAChC,yBAAKoD,IAAMqE,IAAiBnE,IAAI,gBAGpC,6BAEI2G,KAGJ,6BACE/G,UAAU,eACVlD,cAAY,gBAEZ,4DACA,uBAAGA,cAAY,gBAAiBgK,EAAcrB,kBAEhD,kBAAC,IAAD,CAAMxF,GAAG,oBACP,4BACEpD,KAAK,SACLC,cAAY,qBAFd,uBAWD,M,0BCjHIkK,OArDf,WACE,IAAMrK,EAAUC,cADD,EAEoCT,qBAAWjC,KAAtDgE,EAFO,EAEPA,MAAOC,EAFA,EAEAA,SAAUC,EAFV,EAEUA,SAAUC,EAFpB,EAEoBA,YAmBnC,OACE,0BAAM2B,UAAU,cACd,yBAAKE,IAAM+G,KAAc7G,IAAI,cAAcJ,UAAU,eACrD,2CACA,0BAAMA,UAAU,cACd,2BACEnD,KAAK,QACLC,cAAY,cACZC,YAAY,SACZC,MAAQkB,EACRjB,SAAW,gBAAGC,EAAH,EAAGA,OAAH,OAAgBiB,EAASjB,EAAOF,UAE7C,2BACEH,KAAK,WACLC,cAAY,iBACZC,YAAY,WACZC,MAAQoB,EACRnB,SAAW,gBAAGC,EAAH,EAAGA,OAAH,OAAgBmB,EAAYnB,EAAOF,UAEhD,4BACEH,KAAK,SACLC,cAAY,mBACZoK,SAvCR,WACE,IAEMC,EAAY/I,EAASf,OAFP,EAGpB,OAFwB,kDAEA+J,KAAKlJ,IAAUiJ,EAmCtBE,GACXjK,QAjCR,WACE,IAAMkK,EAAO,CACXpJ,SAEF6F,aAAaI,QAAQ,aAAc,GACnCJ,aAAaI,QAAQ,iBAAkB,GACvCJ,aAAaI,QAAQ,OAAQN,KAAKO,UAAUkD,IAC5C3K,EAAQe,KAAK,cAsBT,aCHO6J,I,MArCA,WACT1D,KAAKC,MAAuC,OAAjCC,aAAaC,QAAQ,UAClCD,aAAaI,QAAQ,OAAQN,KAAKO,UAAU,CAAElG,MAAO,OAFpC,IAIXA,EAAU2F,KAAKC,MAAMC,aAAaC,QAAQ,SAA1C9F,MAER,OACE,8BACE,kBAAC,EAAD,CAAQyD,UAAU,SAASC,MAAO,IAClC,uBAAG9E,cAAY,iBAAiBoB,GAChC,6BAAS8B,UAAU,0BACjB,kBAAC,IAAD,CAAMC,GAAG,oBACP,4BAAQpD,KAAK,SAASC,cAAY,oBAAlC,oBAEF,kBAAC,IAAD,CAAMmD,GAAG,uBACP,4BACEpD,KAAK,SACLC,cAAY,wBAFd,uBAOF,kBAAC,IAAD,CAAMmD,GAAG,KACP,4BACEpD,KAAK,SACLC,cAAY,qBACZM,QAAU,kBAAM2G,aAAayD,UAH/B,UASJ,kBAAC,EAAD,SCjCSC,GAFQ,kBAAO,kBAAC,EAAD,CAAQ9F,UAAU,kBAAkBC,MAAO,KCGnE8F,GAAO,SAACC,EAAQ7H,GACpB,MAAoB,WAAhB6H,EAAO9K,KAEP,6BAAS4E,IAAMkG,EAAOzM,GAAK8E,UAAU,OAAOE,IAAMsF,KAChD,kBAAC,IAAD,CAAMvF,GAAE,mBAAe0H,EAAOzM,KAC5B,yBACE8E,UAAU,aACVE,IAAMyH,EAAOjE,MACbtD,IAAMuH,EAAO/M,KACbkC,cAAA,UAAiBgD,EAAjB,uBAEF,wBAAIhD,cAAA,UAAiBgD,EAAjB,qBAA6C6H,EAAO/M,OAE1D,wBACEkC,cAAA,UAAiBgD,EAAjB,yBADF,UAGO6H,EAAOrM,KAHd,cAGwBqM,EAAOpE,WAE/B,4BACE1G,KAAK,SACLC,cAAA,UAAiBgD,EAAjB,yBACAI,IAAMsF,KAEN,yBAAKtF,IAAMsF,IAAYpF,IAAI,kBAE7B,kBAAC,EAAD,CACEL,SAAQ,UAAMD,EAAN,4BACR8C,QAAU+E,EAAOzM,MAKvB,6BAASuG,IAAMkG,EAAOzM,GAAK8E,UAAU,OAAOE,IAAMsF,KAChD,kBAAC,IAAD,CAAMvF,GAAE,mBAAe0H,EAAOzM,KAC5B,yBACE8E,UAAU,aACVE,IAAMyH,EAAOjE,MACbtD,IAAMuH,EAAO/M,KACbkC,cAAA,UAAiBgD,EAAjB,uBAEF,wBAAIhD,cAAA,UAAiBgD,EAAjB,qBAA6C6H,EAAO/M,OAE1D,wBACEkC,cAAA,UAAiBgD,EAAjB,yBADF,UAGO6H,EAAOnE,eAHd,YAGgCmE,EAAOpE,WAEvC,iCACE,4BACE1G,KAAK,SACLC,cAAA,UAAiBgD,EAAjB,yBACAI,IAAMsF,KAEN,yBAAKtF,IAAMsF,IAAYpF,IAAI,kBAE7B,kBAAC,EAAD,CACEL,SAAQ,UAAMD,EAAN,4BACR8C,QAAU+E,EAAOzM,QAmBZ0M,GAbW,WACxB,IAAMC,EAAiBhE,KAAKC,MAAMC,aAAaC,QAAQ,oBACvD,OACE,8BACE,kBAAC,EAAD,CAAQrC,UAAU,qBAAqBC,MAAO,IAC9C,4BAAQ/E,KAAK,SAASC,cAAY,qBAAlC,OACA,4BAAQD,KAAK,SAASC,cAAY,sBAAlC,QACA,4BAAQD,KAAK,SAASC,cAAY,uBAAlC,UACC+K,EAAiBA,EAAetG,IAAImG,IAAQ,KCvEpCI,GAJE,kBACf,0CCyDaC,OApCf,WACE,OACE,0BAAM/H,UAAU,OACd,kBAAC,IAAD,CAAegI,SAAS,wBACtB,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAYnB,KAClC,kBAAC,IAAD,CAAOkB,KAAK,2BAA2BC,UAAYC,KACnD,kBAAC,IAAD,CAAOF,KAAK,2BAA2BC,UAAYC,KACnD,kBAAC,IAAD,CAAOF,KAAK,eAAeC,UAAYjD,KACvC,kBAAC,IAAD,CAAOgD,KAAK,eAAeC,UAAYE,KACvC,kBAAC,IAAD,CAAOJ,OAAK,EAACC,KAAK,WAAWC,UAAY1F,IACzC,kBAAC,IAAD,CAAOwF,OAAK,EAACC,KAAK,WAAWC,UAAY/F,IACzC,kBAAC,IAAD,CAAO8F,KAAK,yBAAyBC,UAAYG,KACjD,kBAAC,IAAD,CAAOJ,KAAK,yBAAyBC,UAAYL,KACjD,kBAAC,IAAD,CACEI,KAAK,iCACLC,UAAYI,KAEd,kBAAC,IAAD,CACEL,KAAK,iCACLC,UAAYK,KAEd,kBAAC,IAAD,CAAON,KAAK,oBAAoBC,UAAYM,KAC5C,kBAAC,IAAD,CAAOP,KAAK,oBAAoBC,UAAYO,KAC5C,kBAAC,IAAD,CAAOR,KAAK,YAAYC,UAAYnC,KACpC,kBAAC,IAAD,CAAOkC,KAAK,UAAUC,UAAYZ,KAClC,kBAAC,IAAD,CAAOW,KAAK,mBAAmBC,UAAYQ,KAC3C,kBAAC,IAAD,CAAOT,KAAK,sBAAsBC,UAAYP,UCxCtCgB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,GAAD,MACAC,SAASC,eAAe,SD2HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM9L,MAAK,SAAA+L,GACjCA,EAAaC,kB","file":"static/js/main.a7d97c41.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst AppContext = createContext();\n\nexport default AppContext;\n","const fetchByIngredient = async (ingredient) => {\n  const response = await fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?i=${ingredient}`);\n  const json = await response.json();\n  return json.meals;\n};\n\nconst fetchByName = async (name) => {\n  const response = await fetch(`https://www.themealdb.com/api/json/v1/1/search.php?s=${name}`);\n  const json = await response.json();\n  return json.meals;\n};\n\nconst fetchByFirstLetter = async (firstLetter) => {\n  const response = await fetch(`https://www.themealdb.com/api/json/v1/1/search.php?f=${firstLetter}`);\n  const json = await response.json();\n  return json.meals;\n};\n\nexport const fetchAllFoods = async () => {\n  const response = await fetch('https://www.themealdb.com/api/json/v1/1/search.php?s=');\n  const json = await response.json();\n  return json.meals;\n};\n\nexport const fetchRandomFood = async () => {\n  const response = await fetch('https://www.themealdb.com/api/json/v1/1/random.php');\n  const json = await response.json();\n  return json.meals;\n};\n\nexport const fetchMealsById = async (id) => {\n  const response = await fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`);\n  const json = await response.json();\n  return json.meals;\n};\n\nexport const fetchMealsIngredients = async () => {\n  const response = await fetch('https://www.themealdb.com/api/json/v1/1/list.php?i=list');\n  const json = await response.json();\n  return json.meals;\n};\n\nexport const fetchMealsArea = async () => {\n  const response = await fetch('https://www.themealdb.com/api/json/v1/1/list.php?a=list');\n  const json = await response.json();\n  return json.meals;\n};\n\nconst fetchMealsByArea = async (area) => {\n  const response = await fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?a=${area}`);\n  const json = await response.json();\n  return json.meals;\n};\n\nconst getFoods = (filterRadio, filterText) => {\n  switch (filterRadio) {\n  case 'ingredient':\n    return fetchByIngredient(filterText);\n  case 'name':\n    return fetchByName(filterText);\n  case 'first-letter':\n    return fetchByFirstLetter(filterText);\n  case 'area':\n    return fetchMealsByArea(filterText);\n  default:\n    return [];\n  }\n};\n\nexport default getFoods;\n","const fetchByIngredient = async (ingredient) => {\n  const response = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${ingredient}`);\n  const json = await response.json();\n  return json.drinks;\n};\n\nconst fetchByName = async (name) => {\n  const response = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${name}`);\n  const json = await response.json();\n  return json.drinks;\n};\n\nconst fetchByFirstLetter = async (firstLetter) => {\n  const response = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/search.php?f=${firstLetter}`);\n  const json = await response.json();\n  return json.drinks;\n};\n\nexport const fetchAllDrinks = async () => {\n  const response = await fetch('https://www.thecocktaildb.com/api/json/v1/1/search.php?s=');\n  const json = await response.json();\n  return json.drinks;\n};\n\nexport const fetchRandomDrink = async () => {\n  const response = await fetch('https://www.thecocktaildb.com/api/json/v1/1/random.php');\n  const json = await response.json();\n  return json.drinks;\n};\n\nexport const fetchDrinksById = async (id) => {\n  const response = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`);\n  const json = await response.json();\n  return json.drinks;\n};\n\nexport const fetchDrinksIngredients = async () => {\n  const response = await fetch('https://www.thecocktaildb.com/api/json/v1/1/list.php?i=list');\n  const json = await response.json();\n  return json.drinks;\n};\n\nconst getDrinks = (filterRadio, filterText) => {\n  switch (filterRadio) {\n  case 'ingredient':\n    return fetchByIngredient(filterText);\n  case 'name':\n    return fetchByName(filterText);\n  case 'first-letter':\n    return fetchByFirstLetter(filterText);\n  default:\n    return [];\n  }\n};\n\nexport default getDrinks;\n","module.exports = __webpack_public_path__ + \"static/media/shareIcon.06215ed4.svg\";","module.exports = __webpack_public_path__ + \"static/media/whiteHeartIcon.ea3b6ba8.svg\";","module.exports = __webpack_public_path__ + \"static/media/exploreIcon.157945ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/drinkIcon.f87c47c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/mealIcon.b27ba19e.svg\";","module.exports = __webpack_public_path__ + \"static/media/profileIcon.74e487e5.svg\";","module.exports = __webpack_public_path__ + \"static/media/searchIcon.db812135.svg\";","import React, { useContext } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport AppContext from '../context/AppContext';\nimport getFoods from '../api/meals';\nimport getDrinks from '../api/drinks';\n\nconst SearchBar = () => {\n  const {\n    filterRadio,\n    setFilterRadio,\n    filterText,\n    setFilterText,\n    setFoods,\n    setDrinks,\n    setFetched,\n  } = useContext(AppContext);\n  const { pathname } = useLocation();\n  const history = useHistory();\n\n  const handleClick = () => {\n    setFetched(false);\n    if (filterRadio === 'first-letter' && filterText.length > 1) {\n      global.alert('Sua busca deve conter somente 1 (um) caracter');\n    }\n\n    if (pathname.includes('comidas')) {\n      getFoods(filterRadio, filterText)\n        .then((response) => {\n          if (!response) {\n            global\n              .alert('Sinto muito, não encontramos nenhuma receita para esses filtros.');\n          } else if (response.length === 1) {\n            history.push(`/comidas/${response[0].idMeal}`);\n          } else {\n            setFetched(true);\n            setFoods(response);\n          }\n        });\n    } else {\n      getDrinks(filterRadio, filterText)\n        .then((response) => {\n          if (!response) {\n            global\n              .alert('Sinto muito, não encontramos nenhuma receita para esses filtros.');\n          } else if (response.length === 1) {\n            history.push(`/bebidas/${response[0].idDrink}`);\n          } else {\n            setFetched(true);\n            setDrinks(response);\n          }\n        });\n    }\n  };\n\n  return (\n    <form>\n      <input\n        type=\"text\"\n        data-testid=\"search-input\"\n        placeholder=\"Buscar Receita!\"\n        value={ filterText }\n        onChange={ ({ target }) => setFilterText(target.value) }\n      />\n      <label htmlFor=\"ingredient\">\n        Ingrediente:\n        <input\n          name=\"filter\"\n          type=\"radio\"\n          id=\"ingredient\"\n          data-testid=\"ingredient-search-radio\"\n          onClick={ ({ target }) => setFilterRadio(target.id) }\n        />\n      </label>\n      <label htmlFor=\"name\">\n        Nome:\n        <input\n          name=\"filter\"\n          type=\"radio\"\n          id=\"name\"\n          data-testid=\"name-search-radio\"\n          onClick={ ({ target }) => setFilterRadio(target.id) }\n        />\n      </label>\n      <label htmlFor=\"first-letter\">\n        Primeira Letra:\n        <input\n          name=\"filter\"\n          type=\"radio\"\n          id=\"first-letter\"\n          data-testid=\"first-letter-search-radio\"\n          onClick={ ({ target }) => setFilterRadio(target.id) }\n        />\n      </label>\n      <button\n        type=\"button\"\n        data-testid=\"exec-search-btn\"\n        onClick={ async () => handleClick() }\n      >\n        Buscar\n      </button>\n    </form>\n\n  );\n};\n\nexport default SearchBar;\n","module.exports = __webpack_public_path__ + \"static/media/blackHeartIcon.d0456e61.svg\";","module.exports = __webpack_public_path__ + \"static/media/recipeslogin.92d4f78d.png\";","import PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport AppContext from './AppContext';\n\nfunction Provider({ children }) {\n  const [loading, setLoading] = useState(false);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [filterRadio, setFilterRadio] = useState('');\n  const [filterText, setFilterText] = useState('');\n  const [foods, setFoods] = useState([]);\n  const [drinks, setDrinks] = useState([]);\n  const [filterByArea, setFilterByArea] = useState([]);\n  const [exploredFoods, setExploredFoods] = useState([]);\n  const [exploredDrinks, setExploredDrinks] = useState([]);\n  const [area, setArea] = useState([]);\n  const [ingredients, setIngredients] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [Fetched, setFetched] = useState(false);\n  const [recipeDetail, setRecipeDetail] = useState([]);\n  const [doneRecipes, setDoneRecipes] = useState([]);\n  const [inProgressRecipes,\n    setInProgressRecipes] = useState({ cocktails: {}, meals: {} });\n\n  const contextValue = {\n    loading,\n    setLoading,\n    email,\n    setEmail,\n    password,\n    setPassword,\n    filterRadio,\n    setFilterRadio,\n    filterText,\n    setFilterText,\n    foods,\n    setFoods,\n    drinks,\n    setDrinks,\n    categories,\n    setCategories,\n    Fetched,\n    setFetched,\n    recipeDetail,\n    setRecipeDetail,\n    ingredients,\n    setIngredients,\n    exploredFoods,\n    setExploredFoods,\n    exploredDrinks,\n    setExploredDrinks,\n    area,\n    setArea,\n    filterByArea,\n    setFilterByArea,\n    inProgressRecipes,\n    setInProgressRecipes,\n    doneRecipes,\n    setDoneRecipes,\n  };\n\n  return (\n    <AppContext.Provider value={ contextValue }>\n      {children}\n    </AppContext.Provider>\n  );\n}\n\nProvider.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n\nexport default Provider;\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport '../Styles/Card.css';\n\nconst useRenderCard = ({ receitas, index, dataTest }) => {\n  const { pathname } = useLocation();\n  if (receitas) {\n    if ((pathname === '/comidas') || (pathname === '/explorar/comidas/area')) {\n      return (\n        <Link\n          className=\"link-card\"\n          to={ `/comidas/${receitas.idMeal}` }\n        >\n          <section\n            className=\"card\"\n            data-testid={ dataTest }\n          >\n            <img\n              className=\"image-card\"\n              src={ receitas.strMealThumb }\n              alt={ receitas.strMeal }\n              data-testid={ `${index}-card-img` }\n            />\n            <h3\n              data-testid={ `${index}-card-name` }\n              className=\"card-title\"\n            >\n              { receitas.strMeal }\n\n            </h3>\n          </section>\n        </Link>\n      );\n    }\n    return (\n      <Link\n        className=\"link-card\"\n        to={ `/bebidas/${receitas.idDrink}` }\n      >\n        <div\n          data-testid={ dataTest }\n          className=\"card\"\n        >\n          <img\n            className=\"image-card\"\n            src={ receitas.strDrinkThumb }\n            alt={ receitas.strDrink }\n            data-testid={ `${index}-card-img` }\n          />\n          <section>\n            <h3\n              className=\"card-title\"\n              data-testid={ `${index}-card-name` }\n            >\n              { receitas.strDrink }\n\n            </h3>\n          </section>\n        </div>\n      </Link>);\n  }\n};\n\nconst Card = (receita) => (\n  useRenderCard(receita)\n);\n\nexport default Card;\n","import React from 'react';\n\nimport '../Styles/Footer.css';\n// import { Link } from 'react-router-dom';\n\nimport exploreIcon from '../images/exploreIcon.svg';\nimport drinkIcon from '../images/drinkIcon.svg';\nimport mealIcon from '../images/mealIcon.svg';\n\nconst Footer = () => (\n  <footer data-testid=\"footer\">\n    <a href=\"/explorar\" data-testid=\"explore-bottom-btn\" src={ exploreIcon }>\n      <img src={ exploreIcon } alt=\"explore-icon\" />\n    </a>\n    <a href=\"/bebidas\" data-testid=\"drinks-bottom-btn\" src={ drinkIcon }>\n      <img src={ drinkIcon } alt=\"drinks-icon\" />\n    </a>\n    <a href=\"/comidas\" data-testid=\"food-bottom-btn\" src={ mealIcon }>\n      <img src={ mealIcon } alt=\"food-icon\" />\n    </a>\n  </footer>\n);\n\nexport default Footer;\n","export const fetchCategorieDrinks = async () => {\n  const response = await fetch('https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list');\n  const json = await response.json();\n  return json.drinks;\n};\n\nexport const fetchFilterByCategorieDrink = async (categorie) => {\n  const response = await\n  fetch(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=${categorie}`);\n  const json = await response.json();\n  return json.drinks;\n};\n\nexport const fetchAllDrinks = async () => {\n  const response = await fetch('https://www.thecocktaildb.com/api/json/v1/1/search.php?s=');\n  const json = await response.json();\n  return json.drinks;\n};\n","export const fetchCategorieFood = async () => {\n  const response = await fetch('https://www.themealdb.com/api/json/v1/1/list.php?c=list');\n  const json = await response.json();\n  return json.meals;\n};\n\nexport const fetchFilterByCategorieFood = async (categorie) => {\n  const response = await\n  fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?c=${categorie}`);\n  const json = await response.json();\n  return json.meals;\n};\n\nexport const fetchAllFoods = async () => {\n  const response = await fetch('https://www.themealdb.com/api/json/v1/1/search.php?s=');\n  const json = await response.json();\n  return json.meals;\n};\n","import React, { useContext, useEffect, useState } from 'react';\nimport { useLocation } from 'react-router';\nimport { fetchFilterByCategorieDrink,\n  fetchCategorieDrinks,\n  fetchAllDrinks,\n} from '../api/categorieDrink';\nimport { fetchFilterByCategorieFood,\n  fetchCategorieFood,\n  fetchAllFoods } from '../api/categorieFood';\nimport AppContext from '../context/AppContext';\nimport '../Styles/Header.css';\n\nconst FilterCategorie = () => {\n  const { pathname } = useLocation();\n  const {\n    categories,\n    setCategories,\n    setDrinks,\n    setFetched,\n    setFoods } = useContext(AppContext);\n  const [selectedCategory, setSelectedCategory] = useState('All');\n\n  useEffect(() => {\n    if (pathname === '/comidas') {\n      fetchCategorieFood().then(setCategories);\n    }\n    if (pathname === '/bebidas') {\n      fetchCategorieDrinks().then(setCategories);\n    }\n  }, [pathname, setCategories]);\n\n  const maxButtons = 5;\n\n  const handleClick = (categorie) => {\n    setFetched(false);\n\n    if (pathname === '/comidas') {\n      if (categorie === selectedCategory) {\n        fetchAllFoods().then(setFoods);\n        setFetched(true);\n        setSelectedCategory('All');\n      } else {\n        fetchFilterByCategorieFood(categorie).then(setFoods);\n        setFetched(true);\n        setSelectedCategory(categorie);\n      }\n    }\n    if (pathname === '/bebidas') {\n      if (categorie === selectedCategory) {\n        fetchAllDrinks().then(setDrinks);\n        setFetched(true);\n        setSelectedCategory('All');\n      } else {\n        fetchFilterByCategorieDrink(categorie).then(setDrinks);\n        setFetched(true);\n        setSelectedCategory(categorie);\n      }\n    }\n  };\n\n  const clickAll = () => {\n    if (pathname === '/comidas') {\n      fetchAllFoods().then(setFoods);\n      setFetched(true);\n      setSelectedCategory('All');\n    } else {\n      fetchAllDrinks().then(setDrinks);\n      setFetched(true);\n      setSelectedCategory('All');\n    }\n  };\n\n  return (\n    (pathname === '/comidas' || pathname === '/bebidas')\n      && (\n        <section className=\"category-btn-container\">\n          <button\n            type=\"button\"\n            data-testid=\"All-category-filter\"\n            className=\"category-btn\"\n            onClick={ clickAll }\n          >\n            All\n          </button>\n          {categories.map(({ strCategory }, index) => {\n            if (index < maxButtons) {\n              return (\n                <button\n                  type=\"button\"\n                  key={ index }\n                  className=\"category-btn\"\n                  data-testid={ `${strCategory}-category-filter` }\n                  onClick={ () => handleClick(strCategory) }\n                >\n                  {strCategory}\n                </button>\n              );\n            } return null;\n          })}\n        </section>)\n  );\n};\n\nexport default FilterCategorie;\n","import PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport profileIcon from '../images/profileIcon.svg';\nimport searchIcon from '../images/searchIcon.svg';\nimport FilterCategorie from './FilterCategorie';\nimport SearchBar from './SearchBar';\nimport '../Styles/Header.css';\n\nconst Header = ({ titlePage, show }) => {\n  const [visible, setVisible] = useState(false);\n  return (\n    <header>\n      <section className=\"icons-header\">\n        <Link to=\"/perfil\" className=\"link-icon\">\n          <img src={ profileIcon } data-testid=\"profile-top-btn\" alt=\"profile-icon\" />\n        </Link>\n        <h1\n          id=\"page-title\"\n          className=\"page-title\"\n          data-testid=\"page-title\"\n        >\n          {titlePage}\n\n        </h1>\n        {show\n        && (\n          <button\n            className=\"search-btn\"\n            type=\"button\"\n            onClick={ () => setVisible(!visible) }\n          >\n            <img\n              src={ searchIcon }\n              alt=\"search-icon\"\n              data-testid=\"search-top-btn\"\n            />\n          </button>)}\n      </section>\n      {visible && <SearchBar />}\n      <FilterCategorie />\n    </header>\n  );\n};\n\nHeader.propTypes = {\n  show: PropTypes.bool,\n  titlePage: PropTypes.string.isRequired,\n};\n\nHeader.defaultProps = {\n  show: true,\n};\n\nexport default Header;\n","import React, { useContext, useEffect } from 'react';\nimport Card from '../components/Card';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport { fetchAllDrinks } from '../api/drinks';\nimport AppContext from '../context/AppContext';\nimport '../Styles/Card.css';\n\nconst maxRecipes = 12;\n\nconst renderCards = (drink, index) => (\n  <Card\n    key={ drink.idDrink }\n    receitas={ drink }\n    index={ index }\n    dataTest={ `${index}-recipe-card` }\n  />);\n\nconst Bebidas = () => {\n  const { drinks, Fetched, setDrinks,\n    setFetched, exploredDrinks } = useContext(AppContext);\n\n  useEffect(() => {\n    fetchAllDrinks().then((response) => setDrinks(response));\n    setFetched(true);\n  }, [setFetched, setDrinks]);\n\n  const mainDrinks = (Fetched && drinks.length > maxRecipes ? drinks.slice(0, maxRecipes)\n    .map(renderCards) : drinks.map(renderCards));\n\n  const mainExplored = (Fetched && exploredDrinks.length > maxRecipes\n    ? exploredDrinks.slice(0, maxRecipes)\n      .map(renderCards) : exploredDrinks.map(renderCards));\n\n  return (\n    <main>\n      <Header titlePage=\"Bebidas\" />\n      <section className=\"main-cards-container\">\n        {exploredDrinks.length > 0 ? mainExplored : mainDrinks}\n      </section>\n      <Footer />\n    </main>\n  );\n};\n\nexport default Bebidas;\n","import React, { useContext, useEffect } from 'react';\nimport Card from '../components/Card';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport { fetchAllFoods } from '../api/meals';\nimport AppContext from '../context/AppContext';\nimport '../Styles/Card.css';\n\nconst maxRecipes = 12;\n\nexport const renderCards = (food, index) => (\n  <Card\n    key={ food.idMeal }\n    receitas={ food }\n    index={ index }\n    dataTest={ `${index}-recipe-card` }\n  />);\n\nconst Comidas = () => {\n  const { foods, Fetched, setFoods, setFetched, exploredFoods } = useContext(AppContext);\n\n  useEffect(() => {\n    fetchAllFoods().then((response) => setFoods(response));\n    setFetched(true);\n  }, [setFetched, setFoods]);\n\n  const mainFoods = (Fetched && foods.length > maxRecipes ? foods.slice(0, maxRecipes)\n    .map(renderCards) : foods.map(renderCards));\n\n  const mainExplored = (Fetched && foods.length > maxRecipes\n    ? exploredFoods.slice(0, maxRecipes)\n      .map(renderCards) : exploredFoods.map(renderCards));\n\n  return (\n    <main>\n      <Header titlePage=\"Comidas\" />\n      <section className=\"main-cards-container\">\n        {exploredFoods.length > 0 ? mainExplored : mainFoods}\n      </section>\n      <Footer />\n    </main>\n  );\n};\n\nexport default Comidas;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport AppContext from '../context/AppContext';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\n\nconst FavoriteButton = ({ dataTest, idProps }) => {\n  const { recipeDetail } = useContext(AppContext);\n  const { pathname } = useLocation();\n  const [verify, setVerify] = useState();\n  const [favoriteRecipes, setFavoriteRecipes] = useState([]);\n\n  const setTrueOrFalse = () => {\n    setVerify(favoriteRecipes.some((e) => e.id === idProps));\n  };\n\n  const createObj = () => {\n    if (pathname.includes('bebidas')) {\n      return [...favoriteRecipes, {\n        id: recipeDetail[0].idDrink,\n        type: 'bebida',\n        area: '',\n        category: recipeDetail[0].strCategory,\n        alcoholicOrNot: recipeDetail[0].strAlcoholic,\n        name: recipeDetail[0].strDrink,\n        image: recipeDetail[0].strDrinkThumb,\n      }];\n    }\n    return [...favoriteRecipes, {\n      id: recipeDetail[0].idMeal,\n      type: 'comida',\n      area: recipeDetail[0].strArea,\n      category: recipeDetail[0].strCategory,\n      alcoholicOrNot: '',\n      name: recipeDetail[0].strMeal,\n      image: recipeDetail[0].strMealThumb,\n    }];\n  };\n\n  const clickFavorite = () => {\n    // setTrueOrFalse();\n    if (!verify) {\n      setFavoriteRecipes(createObj());\n    } else {\n      const index = favoriteRecipes.findIndex((e) => e.id === idProps);\n      favoriteRecipes.splice(index, 1);\n      setFavoriteRecipes(favoriteRecipes);\n      setTrueOrFalse();\n    }\n  };\n\n  useEffect(() => {\n    const local = JSON.parse(localStorage.getItem('favoriteRecipes')) || [];\n    if (local) {\n      setFavoriteRecipes(local);\n    }\n    setTrueOrFalse();\n    console.log(verify);\n  }, []);\n\n  useEffect(() => {\n    setTrueOrFalse();\n    localStorage.setItem('favoriteRecipes', JSON.stringify(favoriteRecipes));\n  }, [favoriteRecipes, setTrueOrFalse]);\n\n  const setIcon = () => {\n    if (verify) {\n      return blackHeartIcon;\n    }\n    return whiteHeartIcon;\n  };\n\n  return (\n    <button\n      type=\"button\"\n      data-testid={ dataTest }\n      onClick={ () => clickFavorite() }\n      src={ setIcon() }\n    >\n      <img src={ setIcon() } alt=\"Favoritar\" />\n    </button>\n  );\n};\n\nFavoriteButton.propTypes = {\n  dataTest: PropTypes.string.isRequired,\n  idProps: PropTypes.string.isRequired,\n};\n\nexport default FavoriteButton;\n","import PropTypes from 'prop-types';\nimport React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router';\nimport AppContext from '../context/AppContext';\n\nconst RecomendationCard = ({ obj, i }) => {\n  const { pathname } = useLocation();\n  const { drinks, foods } = useContext(AppContext);\n  const maxRecomedantion = 6;\n\n  if (pathname.includes('comidas')) {\n    if (drinks !== null && i < maxRecomedantion) {\n      return (\n        <Link\n          className=\"link-card recomendation\"\n          to={ `/bebidas/${obj.idDrink}` }\n          key={ obj.idDrink }\n        >\n          <div\n            className=\"card\"\n            data-testid={ `${i}-recomendation-card` }\n          >\n            <img\n              src={ obj.strDrinkThumb }\n              alt={ obj.strDrink }\n              data-testid={ `${i}-card-img` }\n              className=\"image-card \"\n            />\n            <h3\n              className=\"card-title \"\n              data-testid={ `${i}-recomendation-title` }\n            >\n              { obj.strDrink }\n\n            </h3>\n          </div>\n        </Link>);\n    }\n    return null;\n  } if (foods !== null && i < maxRecomedantion) {\n    return (\n      <Link\n        className=\"link-card recomendation\"\n        to={ `/comidas/${obj.idMeal}` }\n        key={ obj.idMeal }\n      >\n        <div\n          className=\"card\"\n          data-testid={ `${i}-recomendation-card` }\n        >\n          <img\n            src={ obj.strMealThumb }\n            alt={ obj.strMeal }\n            data-testid={ `${i}-card-img` }\n            className=\"image-card \"\n          />\n          <h3\n            className=\"card-title \"\n            data-testid={ `${i}-recomendation-title` }\n          >\n            { obj.strMeal }\n\n          </h3>\n        </div>\n      </Link>\n    );\n  }\n  return null;\n};\n\nRecomendationCard.propTypes = {\n  i: PropTypes.number.isRequired,\n  obj: PropTypes.shape({\n    idDrink: PropTypes.string,\n    idMeal: PropTypes.string,\n    strDrink: PropTypes.string,\n    strDrinkThumb: PropTypes.string,\n    strMeal: PropTypes.string,\n    strMealThumb: PropTypes.string,\n  }).isRequired,\n};\n\nexport default RecomendationCard;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { useParams, useLocation, useHistory } from 'react-router-dom';\nimport AppContext from '../context/AppContext';\nimport '../Styles/Detalhes.css';\n\nconst DetailsButton = () => {\n  const { pathname } = useLocation();\n  const { id } = useParams();\n  const { recipeDetail,\n    inProgressRecipes,\n    setInProgressRecipes } = useContext(AppContext);\n  const { cocktails, meals } = inProgressRecipes;\n  const history = useHistory();\n  const [verify, setVerify] = useState();\n\n  const filterIngredients = Object.entries(recipeDetail[0])\n    .filter(([key, value]) => key.includes('strIngredient')\n        && (value !== '') && (value !== null));\n  const ingredients = filterIngredients.map((e) => e[1]);\n\n  const createObj = () => {\n    if (pathname.includes('comida')) {\n      return {\n        cocktails: {\n          ...cocktails,\n        },\n        meals: {\n          ...meals,\n          [id]: ingredients,\n        },\n      };\n    } return {\n      meals: {\n        ...meals,\n      },\n      cocktails: {\n        ...cocktails,\n        [id]: ingredients,\n      },\n    };\n  };\n\n  const setTrueOrFalse = () => {\n    if (pathname.includes('comidas')) {\n      return setVerify(Object.keys(meals).some((e) => e === id));\n    }\n\n    setVerify(Object.keys(cocktails).some((e) => e === id));\n  };\n\n  useEffect(() => {\n    setTrueOrFalse();\n    const local = localStorage.getItem('inProgressRecipes');\n    if (local) {\n      setInProgressRecipes(JSON.parse(local));\n    }\n  }, []);\n\n  useEffect(() => {\n    setTrueOrFalse();\n    localStorage.setItem('inProgressRecipes', JSON.stringify(inProgressRecipes));\n  }, [inProgressRecipes]);\n\n  const startRecipe = async () => {\n    await setInProgressRecipes(createObj());\n    history.push(`${pathname}/in-progress`);\n  };\n\n  const continueRecipe = () => {\n    history.push(`${pathname}/in-progress`);\n  };\n\n  const buttonInitRecipe = () => (\n    <button\n      type=\"button\"\n      data-testid=\"start-recipe-btn\"\n      className=\"start-recipe-btn\"\n      onClick={ () => startRecipe() }\n    >\n      Iniciar Receita\n    </button>\n  );\n\n  const buttonContinueRecipe = () => (\n    <button\n      type=\"button\"\n      data-testid=\"start-recipe-btn\"\n      className=\"start-recipe-btn\"\n      onClick={ () => continueRecipe() }\n    >\n      Continuar Receita\n    </button>\n  );\n\n  if (verify) {\n    return buttonContinueRecipe();\n  } return buttonInitRecipe();\n};\n\nexport default DetailsButton;\n","import React, { useContext, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchAllFoods } from '../api/meals';\nimport { fetchDrinksById } from '../api/drinks';\nimport '../Styles/Detalhes.css';\nimport shareIcon from '../images/shareIcon.svg';\nimport FavoriteButton from '../components/FavoriteButton';\n\nimport AppContext from '../context/AppContext';\nimport RecomendationCard from '../components/RecomendationCard';\nimport DetailsButton from '../components/DetailsButton';\n\nconst DetalhesComidas = () => {\n  const { recipeDetail, setRecipeDetail, foods, setFoods } = useContext(AppContext);\n  const { id } = useParams();\n\n  useEffect(() => {\n    fetchDrinksById(id).then(setRecipeDetail);\n    fetchAllFoods().then(setFoods);\n  }, [setFoods, setRecipeDetail, id]);\n\n  const currentDrinks = recipeDetail[0];\n\n  const renderDetails = () => {\n    if (currentDrinks) {\n      const filterIngredients = Object.entries(currentDrinks)\n        .filter(([key, value]) => key.includes('strIngredient')\n          && (value !== '') && (value !== null));\n      const filterMeasure = Object.entries(currentDrinks)\n        .reduce((acc, [key, value]) => {\n          if (key.includes('strMeasure')) {\n            if (value === null) {\n              acc.push('');\n            } else {\n              acc.push(value);\n            }\n          }\n          return acc;\n        }, []);\n      return (\n        <section className=\"details-container\">\n          <img\n            src={ currentDrinks.strDrinkThumb }\n            alt={ currentDrinks.strDrink }\n            data-testid=\"recipe-photo\"\n            className=\"image-details\"\n          />\n          <h2\n            className=\"title-details\"\n            data-testid=\"recipe-title\"\n          >\n            {currentDrinks.strDrink}\n          </h2>\n          <h3\n            data-testid=\"recipe-category\"\n            className=\"category-details\"\n          >\n            {currentDrinks.strAlcoholic}\n          </h3>\n          <h4\n            data-testid=\"recipe-category\"\n            className=\"category-details\"\n          >\n            {currentDrinks.strCategory}\n          </h4>\n          <section>\n            <button type=\"button\" data-testid=\"share-btn\">\n              <img src={ shareIcon } alt=\"Compartilhar\" />\n            </button>\n            <FavoriteButton dataTest=\"favorite-btn\" idProps={ id } />\n          </section>\n          <ul>\n            {filterIngredients.map(([key, value], i) => (\n              <li\n                data-testid={ `${i}-ingredient-name-and-measure` }\n                key={ key }\n              >\n                {`${filterMeasure[i]} ${value}`}\n              </li>))}\n          </ul>\n          <section\n            className=\"instructions\"\n            data-testid=\"instructions\"\n          >\n            <h4>Instruções de preparo:</h4>\n            <p data-testid=\"instructions\">{currentDrinks.strInstructions}</p>\n          </section>\n          <section className=\"recomendation-container\">\n            {\n              foods.map((food, i) => (\n                <RecomendationCard\n                  obj={ food }\n                  i={ i }\n                  key={ i }\n                />\n              ))\n            }\n          </section>\n          <DetailsButton />\n        </section>\n      );\n    }\n\n    return null;\n  };\n\n  return renderDetails();\n};\n\nexport default DetalhesComidas;\n","import React, { useContext, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMealsById } from '../api/meals';\nimport { fetchAllDrinks } from '../api/drinks';\nimport FavoriteButton from '../components/FavoriteButton';\n\nimport shareIcon from '../images/shareIcon.svg';\n\nimport AppContext from '../context/AppContext';\n\nimport '../Styles/Detalhes.css';\nimport RecomendationCard from '../components/RecomendationCard';\nimport DetailsButton from '../components/DetailsButton';\n\nconst DetalhesComidas = () => {\n  const { recipeDetail, setRecipeDetail, drinks, setDrinks } = useContext(AppContext);\n  const { id } = useParams();\n\n  useEffect(() => {\n    fetchMealsById(id).then(setRecipeDetail);\n    fetchAllDrinks().then(setDrinks);\n  }, [setRecipeDetail, setDrinks, id]);\n\n  const currentMeal = recipeDetail[0];\n\n  const renderDetails = () => {\n    const magicNumber = 32;\n\n    if (currentMeal) {\n      const filterIngredients = Object.entries(currentMeal)\n        .filter(([key, value]) => key.includes('strIngredient')\n        && (value !== '') && (value !== null));\n      const filterMeasure = Object.entries(currentMeal)\n        .reduce((acc, [key, value]) => {\n          if (key.includes('strMeasure')) {\n            if (value === null) {\n              acc.push('');\n            } else {\n              acc.push(value);\n            }\n          }\n          return acc;\n        }, []);\n\n      return (\n        <section className=\"details-container\">\n          <img\n            src={ currentMeal.strMealThumb }\n            alt={ currentMeal.strMeal }\n            data-testid=\"recipe-photo\"\n            className=\"image-details\"\n          />\n          <h2\n            className=\"title-details\"\n            data-testid=\"recipe-title\"\n          >\n            { currentMeal.strMeal }\n          </h2>\n          <h3\n            data-testid=\"recipe-category\"\n            className=\"category-details\"\n          >\n            { currentMeal.strCategory }\n          </h3>\n          <section>\n            <button type=\"button\" data-testid=\"share-btn\">\n              <img src={ shareIcon } alt=\"Compartilhar\" />\n            </button>\n            <FavoriteButton dataTest=\"favorite-btn\" idProps={ id } />\n          </section>\n          <ul>\n            {filterIngredients.map(([key, value], i) => (\n              <li\n                data-testid={ `${i}-ingredient-name-and-measure` }\n                key={ key }\n              >\n                {`${filterMeasure[i]} ${value}`}\n              </li>))}\n          </ul>\n          <div data-testid=\"instructions\">\n            <h4>Instruções de preparo:</h4>\n            <p data-testid=\"instructions\">{ currentMeal.strInstructions }</p>\n          </div>\n          <section key={ currentMeal.idMeal }>\n            <iframe\n              title=\"video\"\n              width=\"330\"\n              height=\"315\"\n              data-testid=\"video\"\n              src={ currentMeal.strYoutube ? `https://www.youtube.com/embed/${currentMeal.strYoutube.slice(magicNumber)}` : '' }\n            />\n          </section>\n          <section className=\"recomendation-container\">\n            {\n              drinks.map((drink, i) => (\n                <RecomendationCard\n                  obj={ drink }\n                  i={ i }\n                  key={ i }\n                />\n              ))\n            }\n          </section>\n          <DetailsButton />\n        </section>\n      );\n    }\n\n    return null;\n  };\n\n  return renderDetails();\n};\n\nexport default DetalhesComidas;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\n\nconst Explorar = () => (\n  <main>\n    <Header titlePage=\"Explorar\" show={ false } />\n    <Link to=\"/explorar/comidas\">\n      <button type=\"button\" data-testid=\"explore-food\">Explorar Comidas</button>\n    </Link>\n    <Link to=\"/explorar/bebidas\">\n      <button type=\"button\" data-testid=\"explore-drinks\">Explorar Bebidas</button>\n    </Link>\n    <Footer />\n  </main>\n);\n\nexport default Explorar;\n","import React, { useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport { fetchDrinksById, fetchRandomDrink } from '../api/drinks';\nimport AppContext from '../context/AppContext';\n\nconst useExplorarBebidas = () => {\n  const { recipeDetail, setRecipeDetail } = useContext(AppContext);\n\n  useEffect(() => {\n    fetchRandomDrink().then((res) => fetchDrinksById(res[0].idDrink))\n      .then(setRecipeDetail);\n  }, [setRecipeDetail]);\n\n  const currentDrink = recipeDetail[0];\n  if (currentDrink) {\n    return (\n      <main>\n        <Header titlePage=\"Explorar Bebidas\" show={ false } />\n        <Link to=\"/explorar/bebidas/ingredientes\">\n          <button\n            type=\"button\"\n            data-testid=\"explore-by-ingredient\"\n          >\n            Por Ingredientes\n          </button>\n        </Link>\n        <Link to={ `/bebidas/${recipeDetail[0].idDrink}` }>\n          <button type=\"button\" data-testid=\"explore-surprise\">Me Surpreenda!</button>\n        </Link>\n        <Footer />\n      </main>\n    );\n  } return null;\n};\n\nexport default useExplorarBebidas;\n","import React, { useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport { fetchMealsById, fetchRandomFood } from '../api/meals';\nimport AppContext from '../context/AppContext';\n\nconst useExplorarComidas = () => {\n  const { recipeDetail, setRecipeDetail } = useContext(AppContext);\n\n  useEffect(() => {\n    fetchRandomFood().then((res) => fetchMealsById(res[0].idMeal))\n      .then(setRecipeDetail);\n  }, [setRecipeDetail]);\n\n  const currentFood = recipeDetail[0];\n  if (currentFood) {\n    return (\n      <main>\n        <Header titlePage=\"Explorar Comidas\" show={ false } />\n        <Link to=\"/explorar/comidas/ingredientes\">\n          <button\n            type=\"button\"\n            data-testid=\"explore-by-ingredient\"\n          >\n            Por Ingredientes\n          </button>\n        </Link>\n        <Link to=\"/explorar/comidas/area\">\n          <button type=\"button\" data-testid=\"explore-by-area\">Por Local de Origem</button>\n        </Link>\n        <Link to={ `/comidas/${recipeDetail[0].idMeal}` }>\n          <button type=\"button\" data-testid=\"explore-surprise\">Me Surpreenda!</button>\n        </Link>\n        <Footer />\n      </main>\n    );\n  } return null;\n};\n\nexport default useExplorarComidas;\n","import React, { useEffect, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport getDrinks, { fetchDrinksIngredients } from '../api/drinks';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport AppContext from '../context/AppContext';\n\nconst useExplorarIngredientesBebidas = () => {\n  const { ingredients, setIngredients, setExploredDrinks } = useContext(AppContext);\n  const history = useHistory();\n\n  useEffect(() => {\n    fetchDrinksIngredients().then(setIngredients);\n  }, [setIngredients]);\n\n  const magicNumber = 12;\n\n  const handleChange = (ingredient) => {\n    getDrinks('ingredient', ingredient.strIngredient1).then(setExploredDrinks);\n    history.push('/bebidas');\n  };\n\n  const useRenderCards = (ingredient, index) => (\n    <button\n      onClick={ () => handleChange(ingredient) }\n      type=\"button\"\n      data-testid={ `${index}-ingredient-card` }\n      key={ ingredient.strIngredient1 }\n    >\n      <img\n        src={ `https://www.thecocktaildb.com/images/ingredients/${ingredient.strIngredient1}-Small.png` }\n        alt={ ingredient.strIngredient1 }\n        data-testid={ `${index}-card-img` }\n      />\n      <h3 data-testid={ `${index}-card-name` }>{ ingredient.strIngredient1 }</h3>\n    </button>\n  );\n  return (\n\n    <main>\n      <Header titlePage=\"Explorar Ingredientes\" show={ false } />\n      {ingredients.length > magicNumber\n        ? ingredients.slice(0, magicNumber).map(useRenderCards)\n        : ingredients.map(useRenderCards)}\n      <Footer />\n    </main>\n  );\n};\n\nexport default useExplorarIngredientesBebidas;\n","import React, { useEffect, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport getFoods, { fetchMealsIngredients } from '../api/meals';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport AppContext from '../context/AppContext';\n\nconst useExplorarIngredientesComidas = () => {\n  const { ingredients, setIngredients, setExploredFoods } = useContext(AppContext);\n  const history = useHistory();\n\n  useEffect(() => {\n    fetchMealsIngredients().then(setIngredients);\n  }, [setIngredients]);\n\n  const magicNumber = 12;\n\n  const handleChange = (ingredient) => {\n    getFoods('ingredient', ingredient.strIngredient).then(setExploredFoods);\n    history.push('/comidas');\n  };\n\n  const useRenderCards = (ingredient, index) => (\n    <button\n      onClick={ () => handleChange(ingredient) }\n      type=\"button\"\n      data-testid={ `${index}-ingredient-card` }\n      key={ ingredient.idIngredient }\n    >\n      <img\n        src={ `https://www.themealdb.com/images/ingredients/${ingredient.strIngredient}-Small.png` }\n        alt={ ingredient.strIngredient }\n        data-testid={ `${index}-card-img` }\n      />\n      <h3 data-testid={ `${index}-card-name` }>{ ingredient.strIngredient }</h3>\n    </button>\n  );\n  return (\n\n    <main>\n      <Header titlePage=\"Explorar Ingredientes\" show={ false } />\n      {ingredients.length > magicNumber\n        ? ingredients.slice(0, magicNumber).map(useRenderCards)\n        : ingredients.map(useRenderCards)}\n      <Footer />\n    </main>\n  );\n};\n\nexport default useExplorarIngredientesComidas;\n","import React, { useContext, useEffect } from 'react';\nimport getFoods, { fetchAllFoods, fetchMealsArea } from '../api/meals';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport AppContext from '../context/AppContext';\nimport { renderCards } from './Comidas';\n\nconst useExplorarOrigem = () => {\n  const { foods, area, setArea, setFoods } = useContext(AppContext);\n\n  useEffect(() => {\n    fetchMealsArea().then(setArea);\n    fetchAllFoods().then(setFoods);\n  }, [setArea, setFoods]);\n\n  const max = 12;\n\n  const handleChange = ({ target }) => {\n    if (target.value !== 'All') {\n      getFoods('area', target.value).then(setFoods);\n    } else {\n      fetchAllFoods().then(setFoods);\n    }\n  };\n\n  const options = (currentArea) => (\n    <option\n      key={ currentArea.strArea }\n      data-testid={ `${currentArea.strArea}-option` }\n      value={ currentArea.strArea }\n    >\n      { currentArea.strArea }\n    </option>\n  );\n\n  const mainFoods = (foods.length > max ? foods.slice(0, max)\n    .map(renderCards) : foods.map(renderCards));\n\n  return (\n    <main>\n      <Header titlePage=\"Explorar Origem\" />\n      <select data-testid=\"explore-by-area-dropdown\" onChange={ handleChange }>\n        <option\n          data-testid=\"All-option\"\n          value=\"All\"\n        >\n          All\n        </option>\n        {area.map(options)}\n      </select>\n      {mainFoods}\n      <Footer />\n    </main>\n  );\n};\n\nexport default useExplorarOrigem;\n","import React, { useContext, useEffect } from 'react';\nimport { Link, useLocation, useParams } from 'react-router-dom';\n\nimport '../Styles/Detalhes.css';\nimport shareIcon from '../images/shareIcon.svg';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\n\nimport AppContext from '../context/AppContext';\nimport { fetchMealsById } from '../api/meals';\nimport { fetchDrinksById } from '../api/drinks';\nimport FavoriteButton from '../components/FavoriteButton';\n\nconst InProgress = () => {\n  const { recipeDetail, setRecipeDetail } = useContext(AppContext);\n  const { pathname } = useLocation();\n  const { id } = useParams();\n  const currentRecipe = recipeDetail[0];\n\n  useEffect(() => {\n    if (pathname.includes('/comidas')) {\n      fetchMealsById(id).then(setRecipeDetail);\n    } else {\n      fetchDrinksById(id).then(setRecipeDetail);\n    }\n  }, [setRecipeDetail, id, pathname]);\n\n  const filteredIngredients = () => {\n    const filterIngredients = Object.entries(currentRecipe)\n      .filter(([key, value]) => key.includes('strIngredient')\n      && (value !== '') && (value !== null));\n\n    const filterMeasure = Object.entries(currentRecipe)\n      .reduce((acc, [key, value]) => {\n        if (key.includes('strMeasure')) {\n          if (value === null) {\n            acc.push('');\n          } else {\n            acc.push(value);\n          }\n        }\n\n        return acc;\n      }, []);\n\n    return filterIngredients.map(([key, value], i) => (\n      <label\n        htmlFor={ i }\n        key={ i }\n        data-testid={ `${i}-ingredient-step` }\n      >\n        {`${filterMeasure[i]} ${value}`}\n        <input\n          id={ i }\n          name={ `${filterMeasure[i]} ${value}` }\n          type=\"checkbox\"\n          key={ key }\n        />\n      </label>\n    ));\n  };\n\n  const renderInProgress = () => {\n    if (currentRecipe && currentRecipe.strDrink) {\n      return (\n        <section className=\"details-container\">\n          <img\n            src={ currentRecipe.strDrinkThumb }\n            alt={ currentRecipe.strDrink }\n            data-testid=\"recipe-photo\"\n            className=\"image-details\"\n          />\n          <h2\n            className=\"title-details\"\n            data-testid=\"recipe-title\"\n          >\n            { currentRecipe.strDrink }\n          </h2>\n          <h3\n            data-testid=\"recipe-category\"\n            className=\"category-details\"\n          >\n            {currentRecipe.strAlcoholic}\n          </h3>\n          <h4\n            data-testid=\"recipe-category\"\n            className=\"category-details\"\n          >\n            { currentRecipe.strCategory }\n          </h4>\n          <section>\n            <button type=\"button\" data-testid=\"share-btn\">\n              <img src={ shareIcon } alt=\"Compartilhar\" />\n            </button>\n            <FavoriteButton dataTest=\"favorite-btn\" />\n          </section>\n          <div>\n            {\n              filteredIngredients()\n            }\n          </div>\n          <section\n            className=\"instructions\"\n            data-testid=\"instructions\"\n          >\n            <h4>Instruções de preparo:</h4>\n            <p data-testid=\"instructions\">{ currentRecipe.strInstructions }</p>\n          </section>\n          <Link to=\"/receitas-feitas\">\n            <button\n              type=\"button\"\n              data-testid=\"finish-recipe-btn\"\n            >\n              Finalizar Receita\n            </button>\n          </Link>\n        </section>\n      );\n    }\n\n    if (currentRecipe && currentRecipe.strMeal) {\n      return (\n        <section className=\"details-container\">\n          <img\n            src={ currentRecipe.strMealThumb }\n            alt={ currentRecipe.strMeal }\n            data-testid=\"recipe-photo\"\n            className=\"image-details\"\n          />\n          <h2\n            className=\"title-details\"\n            data-testid=\"recipe-title\"\n          >\n            { currentRecipe.strMeal }\n          </h2>\n          <h4\n            data-testid=\"recipe-category\"\n            className=\"category-details\"\n          >\n            { currentRecipe.strCategory }\n          </h4>\n          <section>\n            <button type=\"button\" data-testid=\"share-btn\">\n              <img src={ shareIcon } alt=\"Compartilhar\" />\n            </button>\n            <button type=\"button\" data-testid=\"favorite-btn\">\n              <img src={ whiteHeartIcon } alt=\"Favoritar\" />\n            </button>\n          </section>\n          <div>\n            {\n              filteredIngredients()\n            }\n          </div>\n          <section\n            className=\"instructions\"\n            data-testid=\"instructions\"\n          >\n            <h4>Instruções de preparo:</h4>\n            <p data-testid=\"instructions\">{ currentRecipe.strInstructions }</p>\n          </section>\n          <Link to=\"/receitas-feitas\">\n            <button\n              type=\"button\"\n              data-testid=\"finish-recipe-btn\"\n            >\n              Finalizar Receita\n            </button>\n          </Link>\n        </section>\n      );\n    }\n\n    return null;\n  };\n\n  return renderInProgress();\n};\n\nexport default InProgress;\n","import React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport AppContext from '../context/AppContext';\nimport recipesIcon from '../images/recipeslogin.png';\nimport '../Styles/Login.css';\n\nfunction Login() {\n  const history = useHistory();\n  const { email, setEmail, password, setPassword } = useContext(AppContext);\n\n  function validateButton() {\n    const magicNumber = 7;\n    const checkEmailInput = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/;\n    const checkPass = password.length < magicNumber;\n    return !checkEmailInput.test(email) || checkPass;\n  }\n\n  function handleClick() {\n    const user = {\n      email,\n    };\n    localStorage.setItem('mealsToken', 1);\n    localStorage.setItem('cocktailsToken', 1);\n    localStorage.setItem('user', JSON.stringify(user));\n    history.push('/comidas');\n  }\n\n  return (\n    <main className=\"login-page\">\n      <img src={ recipesIcon } alt=\"Recipes App\" className=\"login-icon\"/>\n      <h1>Recipes App</h1>\n      <form className=\"login-form\">\n        <input\n          type=\"email\"\n          data-testid=\"email-input\"\n          placeholder=\"E-mail\"\n          value={ email }\n          onChange={ ({ target }) => setEmail(target.value) }\n        />\n        <input\n          type=\"password\"\n          data-testid=\"password-input\"\n          placeholder=\"Password\"\n          value={ password }\n          onChange={ ({ target }) => setPassword(target.value) }\n        />\n        <button\n          type=\"button\"\n          data-testid=\"login-submit-btn\"\n          disabled={ validateButton() }\n          onClick={ handleClick }\n        >\n          Entrar\n        </button>\n      </form>\n    </main>\n  );\n}\n\nexport default Login;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport '../Styles/Perfil.css';\n\nconst Perfil = () => {\n  if (JSON.parse(localStorage.getItem('user') === null)) {\n    localStorage.setItem('user', JSON.stringify({ email: 'a' }));\n  }\n  const { email } = JSON.parse(localStorage.getItem('user'));\n\n  return (\n    <main>\n      <Header titlePage=\"Perfil\" show={ false } />\n      <p data-testid=\"profile-email\">{email}</p>\n      <section className=\"btns-profile-container\">\n        <Link to=\"/receitas-feitas\">\n          <button type=\"button\" data-testid=\"profile-done-btn\">Receitas Feitas</button>\n        </Link>\n        <Link to=\"/receitas-favoritas\">\n          <button\n            type=\"button\"\n            data-testid=\"profile-favorite-btn\"\n          >\n            Receitas Favoritas\n          </button>\n        </Link>\n        <Link to=\"/\">\n          <button\n            type=\"button\"\n            data-testid=\"profile-logout-btn\"\n            onClick={ () => localStorage.clear() }\n          >\n            Sair\n          </button>\n        </Link>\n      </section>\n      <Footer />\n    </main>\n  );\n};\n\nexport default Perfil;\n","import React from 'react';\nimport Header from '../components/Header';\n\nconst receitasFeitas = () => (<Header titlePage=\"Receitas Feitas\" show={ false } />);\n\nexport default receitasFeitas;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport FavoriteButton from '../components/FavoriteButton';\nimport Header from '../components/Header';\nimport shareIcon from '../images/shareIcon.svg';\n\nconst card = (recipe, index) => {\n  if (recipe.type === 'comida') {\n    return (\n      <section key={ recipe.id } className=\"card\" src={ shareIcon }>\n        <Link to={ `/comidas/${recipe.id}` }>\n          <img\n            className=\"image-card\"\n            src={ recipe.image }\n            alt={ recipe.name }\n            data-testid={ `${index}-horizontal-image` }\n          />\n          <h3 data-testid={ `${index}-horizontal-name` }>{ recipe.name }</h3>\n        </Link>\n        <h5\n          data-testid={ `${index}-horizontal-top-text` }\n        >\n          { `${recipe.area} - ${recipe.category}` }\n        </h5>\n        <button\n          type=\"button\"\n          data-testid={ `${index}-horizontal-share-btn` }\n          src={ shareIcon }\n        >\n          <img src={ shareIcon } alt=\"Compartilhar\" />\n        </button>\n        <FavoriteButton\n          dataTest={ `${index}-horizontal-favorite-btn` }\n          idProps={ recipe.id }\n        />\n      </section>);\n  }\n  return (\n    <section key={ recipe.id } className=\"card\" src={ shareIcon }>\n      <Link to={ `/bebidas/${recipe.id}` }>\n        <img\n          className=\"image-card\"\n          src={ recipe.image }\n          alt={ recipe.name }\n          data-testid={ `${index}-horizontal-image` }\n        />\n        <h3 data-testid={ `${index}-horizontal-name` }>{ recipe.name }</h3>\n      </Link>\n      <h5\n        data-testid={ `${index}-horizontal-top-text` }\n      >\n        { `${recipe.alcoholicOrNot} ${recipe.category}` }\n      </h5>\n      <section>\n        <button\n          type=\"button\"\n          data-testid={ `${index}-horizontal-share-btn` }\n          src={ shareIcon }\n        >\n          <img src={ shareIcon } alt=\"Compartilhar\" />\n        </button>\n        <FavoriteButton\n          dataTest={ `${index}-horizontal-favorite-btn` }\n          idProps={ recipe.id }\n        />\n      </section>\n    </section>);\n};\n\nconst ReceitasFavoritas = () => {\n  const localFavorites = JSON.parse(localStorage.getItem('favoriteRecipes'));\n  return (\n    <main>\n      <Header titlePage=\"Receitas Favoritas\" show={ false } />\n      <button type=\"button\" data-testid=\"filter-by-all-btn\">All</button>\n      <button type=\"button\" data-testid=\"filter-by-food-btn\">Food</button>\n      <button type=\"button\" data-testid=\"filter-by-drink-btn\">Drinks</button>\n      {localFavorites ? localFavorites.map(card) : ''}\n    </main>\n  );\n};\n\nexport default ReceitasFavoritas;\n","import React from 'react';\n\nconst notFound = () => (\n  <h1>Not Found</h1>\n);\n\nexport default notFound;\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport Provider from './context/Provider';\nimport Bebidas from './pages/Bebidas';\nimport Comidas from './pages/Comidas';\nimport DetalhesBebidas from './pages/DetalhesBebidas';\nimport DetalhesComidas from './pages/DetalhesComidas';\nimport Explorar from './pages/Explorar';\nimport explorarBebidas from './pages/ExplorarBebidas';\nimport explorarComidas from './pages/ExplorarComidas';\nimport ExplorarIngredientesBebidas from './pages/ExplorarIngredientesBebidas';\nimport explorarIngredientesComidas from './pages/ExplorarIngredientesComidas';\nimport explorarOrigem from './pages/ExplorarOrigem';\nimport inProgress from './pages/InProgress';\nimport Login from './pages/Login';\nimport Perfil from './pages/Perfil';\nimport ReceitasFeitas from './pages/ReceitaFeitas';\nimport ReceitasFavoritas from './pages/ReceitasFavoritas';\nimport notFound from './components/notFound';\nimport './Styles/Card.css';\n\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n    <main className=\"App\">\n      <BrowserRouter basename=\"/recipes-app-project\">\n        <Provider>\n          <Switch>\n            <Route exact path=\"/\" component={ Login } />\n            <Route path=\"/comidas/:id/in-progress\" component={ inProgress } />\n            <Route path=\"/bebidas/:id/in-progress\" component={ inProgress } />\n            <Route path=\"/comidas/:id\" component={ DetalhesComidas } />\n            <Route path=\"/bebidas/:id\" component={ DetalhesBebidas } />\n            <Route exact path=\"/comidas\" component={ Comidas } />\n            <Route exact path=\"/bebidas\" component={ Bebidas } />\n            <Route path=\"/explorar/comidas/area\" component={ explorarOrigem } />\n            <Route path=\"/explorar/bebidas/area\" component={ notFound } />\n            <Route\n              path=\"/explorar/comidas/ingredientes\"\n              component={ explorarIngredientesComidas }\n            />\n            <Route\n              path=\"/explorar/bebidas/ingredientes\"\n              component={ ExplorarIngredientesBebidas }\n            />\n            <Route path=\"/explorar/comidas\" component={ explorarComidas } />\n            <Route path=\"/explorar/bebidas\" component={ explorarBebidas } />\n            <Route path=\"/explorar\" component={ Explorar } />\n            <Route path=\"/perfil\" component={ Perfil } />\n            <Route path=\"/receitas-feitas\" component={ ReceitasFeitas } />\n            <Route path=\"/receitas-favoritas\" component={ ReceitasFavoritas } />\n          </Switch>\n        </Provider>\n      </BrowserRouter>\n    </main>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}